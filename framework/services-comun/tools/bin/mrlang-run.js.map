{"version":3,"file":"mrlang-run.js","mappings":"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","sources":["webpack://services-comun/./modules/utiles/colors.ts","webpack://services-comun/./modules/utiles/stream.ts","webpack://services-comun/./modules/utiles/fs.ts","webpack://services-comun/./modules/utiles/hash.ts","webpack://services-comun/./modules/utiles/log.ts","webpack://services-comun/./modules/utiles/promise.ts","webpack://services-comun/./modules/utiles/random.ts","webpack://services-comun/./tools/src/mrlang/modulo.ts","webpack://services-comun/./tools/src/mrlang/modulos/fremote.ts","webpack://services-comun/./tools/src/mrlang/modulos/generate.ts","webpack://services-comun/./tools/src/mrlang/modulos/init.ts","webpack://services-comun/./tools/src/mrlang/modulos/pull.ts","webpack://services-comun/./tools/src/mrlang/modulos/push.ts","webpack://services-comun/./tools/src/mrlang/mrlang.ts","webpack://services-comun/./tools/src/mrlang/main.ts","webpack://services-comun/external commonjs \"tslib\"","webpack://services-comun/external commonjs \"mysql2/promise\"","webpack://services-comun/./modules/database/mysql/transaction.ts","webpack://services-comun/./modules/utiles/array.ts","webpack://services-comun/./modules/database/mysql/index.ts","webpack://services-comun/./tools/src/mrlang/mysql.ts","webpack://services-comun/./tools/src/mrpack/clases/colors.ts","webpack://services-comun/./tools/src/mrpack/modulo.ts","webpack://services-comun/external node-commonjs \"node:cluster\"","webpack://services-comun/external node-commonjs \"node:crypto\"","webpack://services-comun/external node-commonjs \"node:fs\"","webpack://services-comun/external node-commonjs \"node:fs/promises\"","webpack://services-comun/external node-commonjs \"node:os\"","webpack://services-comun/external node-commonjs \"node:path\"","webpack://services-comun/external node-commonjs \"node:stream\"","webpack://services-comun/external node-commonjs \"node:util\""],"sourcesContent":["export class Colors {\n    /* STATIC */\n    static Reset = \"\\x1b[0m\";\n    static Bright = \"\\x1b[1m\"; // negrita\n    static Dim = \"\\x1b[2m\"; // color apagado\n    static Underscore = \"\\x1b[4m\";\n    static Blink = \"\\x1b[5m\";\n    static Reverse = \"\\x1b[7m\";\n    static Hidden = \"\\x1b[8m\";\n    static FgBlack = \"\\x1b[30m\";\n    static FgRed = \"\\x1b[31m\";\n    static FgGreen = \"\\x1b[32m\";\n    static FgYellow = \"\\x1b[33m\";\n    static FgBlue = \"\\x1b[34m\";\n    static FgMagenta = \"\\x1b[35m\";\n    static FgCyan = \"\\x1b[36m\";\n    static FgWhite = \"\\x1b[37m\";\n    static BgBlack = \"\\x1b[40m\";\n    static BgRed = \"\\x1b[41m\";\n    static BgGreen = \"\\x1b[42m\";\n    static BgYellow = \"\\x1b[43m\";\n    static BgBlue = \"\\x1b[44m\";\n    static BgMagenta = \"\\x1b[45m\";\n    static BgCyan = \"\\x1b[46m\";\n    static BgWhite = \"\\x1b[47m\";\n    static colorize(config, text, tty = false) {\n        if (!tty) {\n            return `${config.join(\"\")}${text}${this.Reset}`;\n        }\n        return text;\n    }\n}\n","import { pipeline, Readable } from \"node:stream\";\nimport { promisify } from \"node:util\";\nconst pipelinePromise = promisify(pipeline);\nexport { pipelinePromise as pipeline };\nexport function buffer2stream(binary) {\n    return new Readable({\n        read() {\n            this.push(binary);\n            this.push(null);\n        },\n    });\n}\nexport async function stream2buffer(data) {\n    return new Promise((resolve) => {\n        const chunks = [];\n        data.on(\"data\", (chunk) => {\n            chunks.push(chunk);\n        }).on(\"end\", () => {\n            resolve(Buffer.concat(chunks));\n        });\n    });\n}\n","import fs from \"node:fs\";\nimport path from \"node:path\";\nimport { readFileSync } from \"node:fs\";\nimport { existsSync, statSync } from \"node:fs\";\nimport { mkdir as mkdirOriginal, readdir, readFile, rename as renameOriginal, rm, stat } from \"node:fs/promises\";\nimport { error, warning } from \"./log\";\nimport { md5 } from \"./hash\";\nimport { pipeline } from \"./stream\";\nimport { random } from \"./random\";\nexport async function exists(file) {\n    return new Promise((resolve) => {\n        fs.access(file, fs.constants.F_OK, (err) => {\n            resolve(!err);\n        });\n    });\n}\nexport { readdir as readDir, readFile, stat as stats, };\nexport async function readFileBuffer(file) {\n    return readFile(file);\n}\nexport async function readFileString(file) {\n    const data = await readFile(file);\n    return data.toString(\"utf-8\");\n}\nexport async function fileSize(file) {\n    const stats = await stat(file);\n    return stats.size;\n}\nexport async function readJSON(file) {\n    try {\n        const buffer = await readFileString(file);\n        return JSON.parse(buffer);\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n}\nexport function readJSONSync(file) {\n    try {\n        return JSON.parse(readFileSync(file).toString(\"utf-8\"));\n    }\n    catch (e) {\n        return null;\n    }\n}\nexport async function isDir(dir, excepcion = false) {\n    try {\n        const stats = await stat(dir);\n        if (stats.isDirectory()) {\n            return true;\n        }\n    }\n    catch (e) { }\n    if (!excepcion) {\n        return false;\n    }\n    return Promise.reject(\"Not a directory\");\n}\nexport async function isFile(file, excepcion = false) {\n    try {\n        const stats = await stat(file);\n        if (stats.isFile()) {\n            return true;\n        }\n    }\n    catch (e) { }\n    if (!excepcion) {\n        return false;\n    }\n    return Promise.reject(\"Not a file\");\n}\nexport function isFileSync(file) {\n    return existsSync(file) && statSync(file).isFile();\n}\nexport async function mkdir(dir, recursive = false) {\n    await mkdirOriginal(dir, {\n        recursive: recursive\n    });\n}\nexport async function rename(antiguo, nuevo) {\n    return renameOriginal(antiguo, nuevo)\n        .then(() => true)\n        .catch(() => false);\n}\nexport async function rmdir(path) {\n    await rm(path, {\n        recursive: true,\n        force: true,\n    });\n    // return new Promise<void>((resolve: Function)=>{\n    //     child_process.exec(`rm -R ${path}`, () => {\n    //         resolve();\n    //     });\n    // });\n}\nexport async function rmDirManual(path) {\n    if (await isDir(path)) {\n        for (const actual of await readdir(path)) {\n            await rmDirManual(`${path}/${actual}`);\n        }\n    }\n    await unlink(path);\n}\nexport async function overwrite(oldPath, newPath, sobreescribir) {\n    if (!sobreescribir) {\n        if (await exists(newPath)) {\n            await unlink(oldPath);\n            return false;\n        }\n    }\n    if (!await rename(oldPath, newPath)) {\n        await unlink(oldPath);\n    }\n    return true;\n}\nexport async function safeWrite(local, data, sobreescribir = false, excepcion = false) {\n    const rnd = `${local}.${random()}`;\n    return new Promise((resolve, reject) => {\n        fs.writeFile(rnd, data, {\n            flag: \"wx\",\n        }, (err) => {\n            if (!err) {\n                overwrite(rnd, local, sobreescribir).then((ok) => {\n                    if (ok) {\n                        resolve(true);\n                    }\n                    else {\n                        if (!excepcion) {\n                            resolve(false);\n                        }\n                        else {\n                            reject(\"No se pudo renombrar el archivo temporal al final\");\n                        }\n                    }\n                });\n            }\n            else {\n                if (!excepcion) {\n                    error(\"Error en safeWrite\", rnd, err);\n                    resolve(false);\n                }\n                else {\n                    reject(\"No se pudo escribir archivo temporal\");\n                }\n            }\n        });\n    });\n}\nexport async function safeWriteStream(inbound, local, sobreescribir = false) {\n    const rnd = `${local}.${random()}`;\n    return await pipeline(inbound, fs.createWriteStream(rnd, {\n        flags: \"wx\",\n    }))\n        .catch((err) => {\n        warning(`Error escribiendo temporal ${rnd}`, err);\n        return Promise.reject(err);\n    })\n        .then(async () => overwrite(rnd, local, sobreescribir))\n        .catch(async () => {\n        if (await isFile(rnd)) {\n            await unlink(rnd);\n        }\n        return false;\n    });\n}\nexport async function safeWriteStreamBuffer(inbound, local, sobreescribir = false) {\n    const buffer = [];\n    inbound.on(\"data\", (data) => {\n        buffer.push(data);\n    });\n    return new Promise((resolve) => {\n        inbound.on(\"end\", () => {\n            safeWrite(local, Buffer.concat(buffer), sobreescribir).then(() => {\n                resolve(true);\n            }).catch(() => {\n                resolve(false);\n            });\n        });\n        inbound.on(\"error\", () => {\n            resolve(false);\n        });\n        // inbound.on(\"error\", (err)=>{\n        //     warning(\"Error en safeWriteStreamBuffer\", err);\n        //     resolve();\n        // });\n    });\n}\nexport async function unlink(file) {\n    if (await isFile(file)) {\n        await new Promise((resolve, reject) => {\n            fs.unlink(file, (err) => {\n                if (!err) {\n                    resolve();\n                }\n                else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    else if (await isDir(file)) {\n        await rmdir(file);\n    }\n}\nexport async function findSubdirs(dir) {\n    const salida = [];\n    if (await isDir(dir)) {\n        salida.push(dir);\n        for (const item of await readdir(dir)) {\n            if (![\".\", \"..\"].includes(item)) {\n                salida.push(...await findSubdirs(`${dir}/${item}`));\n            }\n        }\n    }\n    return salida;\n}\nasync function md5DirExec(dir) {\n    const salida = [\n        md5(path.basename(dir)),\n    ];\n    if (await isFile(dir)) {\n        salida.push(md5(await readFileString(dir)));\n    }\n    else if (await isDir(dir)) {\n        for (const actual of await readdir(dir)) {\n            const name = `${dir}/${actual}`;\n            if (await isDir(name)) {\n                if (name != \"files\") {\n                    salida.push(await md5Dir(name));\n                }\n            }\n            else if (await isFile(name)) {\n                salida.push(md5(actual));\n                salida.push(md5(await readFileString(name)));\n            }\n        }\n    }\n    return salida.join(\"\");\n}\nexport async function md5Dir(dir) {\n    if (!await isFile(dir) && !await isDir(dir)) {\n        return \"\";\n    }\n    const salida = await md5DirExec(dir);\n    if (salida.length != 32) {\n        return md5(salida);\n    }\n    return salida;\n}\nexport async function md5File(file) {\n    if (!await isFile(file)) {\n        return \"\";\n    }\n    return md5(await readFileString(file));\n}\nexport async function freeSpace(path) {\n    return new Promise((resolve, reject) => {\n        fs.statfs(path, (err, stats) => {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(stats.bsize * stats.bavail);\n            }\n            // console.log('Total free space', formatMemoria(stats.bsize*stats.bfree));\n            // console.log('Available for user', formatMemoria(stats.bsize*stats.bavail));\n            // console.log(stats);\n        });\n    });\n}\n","import { createHash } from \"node:crypto\";\nexport function md5(entrada) {\n    return createHash('md5').update(entrada).digest(\"hex\");\n}\nexport function sha512(entrada) {\n    return createHash('sha512').update(entrada).digest(\"hex\");\n}\n","import os from \"node:os\";\nimport cluster from \"node:cluster\";\nconst KUBERNETES = process.env[\"KUBERNETES\"] == \"true\";\nfunction generarEstatico() {\n    const worker = cluster.worker?.id;\n    if (KUBERNETES) {\n        const partes = os.hostname().split(\"-\");\n        const last = partes.pop();\n        partes.pop(); // eliminamos el ID de despliegue\n        if (worker == undefined) {\n            return `[${partes.join(\"-\")} ${last}]`;\n        }\n        return `[${partes.join(\"-\")} ${last} {${worker}}]`;\n    }\n    if (worker == undefined) {\n        return ``;\n    }\n    return ` {${worker}}`;\n}\nconst ESTATICO = generarEstatico();\nexport function info(...txt) {\n    if (txt.length > 0) {\n        console.info(ESTATICO, ...txt);\n    }\n    else if (!KUBERNETES) {\n        console.info(\"\");\n    }\n}\nexport function warning(...txt) {\n    if (txt.length > 0) {\n        console.warn(ESTATICO, ...txt);\n    }\n    else if (!KUBERNETES) {\n        console.warn(\"\");\n    }\n}\nexport function error(...txt) {\n    if (txt.length > 0) {\n        console.error(ESTATICO, ...txt);\n    }\n    else if (!KUBERNETES) {\n        console.error(\"\");\n    }\n}\nexport function debug(...txt) {\n    if (txt.length > 0) {\n        console.debug(ESTATICO, ...txt);\n    }\n    else if (!KUBERNETES) {\n        console.debug(\"\");\n    }\n}\nexport function time(txt, previo = \"\") {\n    if (previo.length > 0) {\n        info(previo);\n    }\n    console.time(`${KUBERNETES ? \"\" : \"                      \"}=> ${txt}`);\n}\nexport function timeEnd(txt) {\n    info(`Fin de proceso: `);\n    console.timeEnd(`${KUBERNETES ? \"\" : \"                      \"}=> ${txt}`);\n}\nexport function formatMemoria(memoria) {\n    let unidad = \"B\";\n    if (Math.abs(memoria) > 1024) {\n        memoria = memoria / 1024;\n        unidad = \"KB\";\n    }\n    if (Math.abs(memoria) > 1024) {\n        memoria = memoria / 1024;\n        unidad = \"MB\";\n    }\n    if (Math.abs(memoria) > 1024) {\n        memoria = memoria / 1024;\n        unidad = \"GB\";\n    }\n    if (Math.abs(memoria) > 1024) {\n        memoria = memoria / 1024;\n        unidad = \"TB\";\n    }\n    return `${memoria.toFixed(2)}${unidad}`;\n}\nexport function formatTiempo(ms) {\n    let annos = 0;\n    let meses = 0;\n    let dias = 0;\n    let horas = 0;\n    let minutos = 0;\n    let segundos = 0;\n    ms = Math.floor(ms);\n    if (ms > 1000) {\n        segundos = Math.floor(ms / 1000);\n        ms = ms % 1000;\n    }\n    if (segundos > 60) {\n        minutos = Math.floor(segundos / 60);\n        segundos = segundos % 60;\n    }\n    if (minutos > 60) {\n        horas = Math.floor(minutos / 60);\n        minutos = minutos % 60;\n    }\n    if (horas > 24) {\n        dias = Math.floor(horas / 24);\n        horas = horas % 24;\n    }\n    if (dias > 365) {\n        annos = Math.floor(dias / 365);\n        dias = dias % 365;\n    }\n    if (dias > 30) {\n        meses = Math.floor(dias / 30);\n        dias = dias % 30;\n    }\n    const salida = [];\n    if (annos > 0) {\n        salida.push(`${annos} año${annos == 1 ? \"\" : \"s\"}`);\n    }\n    if (meses > 0) {\n        salida.push(`${meses} mes${meses == 1 ? \"\" : \"es\"}`);\n    }\n    if (dias > 0) {\n        salida.push(`${dias} dia${dias == 1 ? \"\" : \"s\"}`);\n    }\n    if (horas > 0) {\n        salida.push(`${horas} hora${horas == 1 ? \"\" : \"s\"}`);\n    }\n    if (minutos > 0) {\n        salida.push(`${minutos} minuto${minutos == 1 ? \"\" : \"s\"}`);\n    }\n    if (segundos > 0) {\n        salida.push(`${segundos} segundo${segundos == 1 ? \"\" : \"s\"}`);\n    }\n    if (ms > 0) {\n        salida.push(`${ms} milisegundo${ms == 1 ? \"\" : \"s\"}`);\n    }\n    if (salida.length > 0) {\n        const ultimo = salida.pop();\n        if (salida.length > 0) {\n            return `${salida.join(\", \")} y ${ultimo}`;\n        }\n        return ultimo;\n    }\n    return \"0 milisegundos\";\n}\n","// import {setTimeout} from 'node:timers/promises';\n//\n// export {setTimeout as PromiseDelayed};\nexport async function PromiseDelayed(delay = 0) {\n    // if (delay>0) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, delay);\n    });\n    // }\n    // return new Promise<void>((resolve: Function) => {\n    //     setImmediate(() => {\n    //         resolve();\n    //     });\n    // });\n}\nexport async function PromiseChain(listado, createPromise) {\n    const salida = [];\n    for (let actual of listado) {\n        const resultado = await createPromise(actual);\n        salida.push(resultado);\n    }\n    return salida;\n}\nexport async function PromiseChainWTB(listado, delay = 0, threads = 1) {\n    const salida = [];\n    const items = [];\n    for (let i = 0; i < threads; i++) {\n        const item = listado.shift();\n        if (item) {\n            items.push(item);\n        }\n    }\n    if (items.length) {\n        const itemResults = await Promise.all(items.map(item => item()));\n        if (delay > 0) {\n            await PromiseDelayed(delay);\n        }\n        salida.push(...itemResults);\n        return salida.concat(await PromiseChainWTB(listado, delay, threads));\n    }\n    return salida;\n}\nexport class PromiseTimeoutError extends Error {\n    ms;\n    constructor(ms) {\n        super(\"Timed out\");\n        this.ms = ms;\n    }\n}\nexport async function PromiseTimeout(promesa, ms) {\n    return await Promise.race([\n        promesa,\n        PromiseDelayed(ms).then(() => Promise.reject(new PromiseTimeoutError(ms))),\n    ]);\n}\nexport async function PromiseAny(promesas) {\n    return await Promise.all(promesas.map(promesa => PromiseResult(promesa)));\n}\nexport async function PromiseResult(promesa) {\n    return promesa.then((resultado) => {\n        return {\n            status: \"OK\",\n            result: resultado,\n        };\n    }).catch((e) => {\n        return {\n            status: \"KO\",\n            error: e,\n        };\n    });\n}\nexport function PromiseMap(array, createPromise) {\n    const promesas = [];\n    for (const item of array) {\n        promesas.push(createPromise(item));\n    }\n    return promesas;\n}\n","const letras = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\nfunction random(chars = 8) {\n    let salida = '';\n    for (let i = 0; i < chars; i++) {\n        salida += letras.charAt(Math.round(Math.random() * 62));\n    }\n    return salida;\n}\nfunction valoresValidos(listado) {\n    if (listado.length < 3) {\n        return [];\n    }\n    const minimo = listado.reduce((minimo, actual) => {\n        return actual < minimo ? actual : minimo;\n    });\n    const maximo = listado.reduce((maximo, actual) => {\n        return actual > maximo ? actual : maximo;\n    });\n    if (Math.abs(minimo - maximo) < 1) {\n        return listado;\n    }\n    const menores = [];\n    const mayores = [];\n    let medianos = false;\n    for (let actual of listado) {\n        const diferencia_menor = Math.abs(actual - minimo);\n        const diferencia_mayor = Math.abs(actual - maximo);\n        if (diferencia_menor < diferencia_mayor) {\n            menores.push(actual);\n        }\n        else if (diferencia_menor > diferencia_mayor) {\n            mayores.push(actual);\n        }\n        else {\n            medianos = true;\n            menores.push(actual);\n            mayores.push(actual);\n        }\n    }\n    if (medianos) {\n        return listado;\n    }\n    if (menores.length == 1) {\n        listado.splice(listado.indexOf(menores[0]), 1);\n    }\n    if (mayores.length == 1) {\n        listado.splice(listado.indexOf(mayores[0]), 1);\n    }\n    return listado;\n}\nexport { random, valoresValidos };\n","import { Modulo as ModuloBase } from \"services-comun/tools/src/mrpack/modulo\";\nimport { PromiseDelayed } from \"services-comun/modules/utiles/promise\";\nimport db from \"./mysql\";\nexport class Modulo extends ModuloBase {\n    /* STATIC */\n    static run(modulo) {\n        PromiseDelayed()\n            .then(async () => modulo.run())\n            .catch(async (err) => {\n            if (err != undefined) {\n                console.error(err);\n            }\n        })\n            .then(async () => {\n            await db.close();\n        })\n            .catch(err => {\n            console.error(err);\n        });\n    }\n}\n","import { Colors } from \"services-comun/tools/src/mrpack/clases/colors\";\nimport { Modulo } from \"../modulo\";\nexport class ModuloFRemote extends Modulo {\n    /* STATIC */\n    static OPTIONS = {\n        ...Modulo.OPTIONS,\n        options: {\n            ...Modulo.OPTIONS.options,\n            modulo: { type: \"string\", short: \"m\", multiple: true, },\n        },\n        strict: true,\n    };\n    static run() {\n        super.run(new this(this.OPTIONS));\n    }\n    /* INSTANCE */\n    constructor(config) {\n        super(config);\n    }\n    async parseParams(config) {\n        if (config.help) {\n            this.mostrarAyuda();\n        }\n        else {\n            const { FixRemote } = await import(/* webpackChunkName: \"mrlang/fremote\" */ \"../clases/fremote\");\n            await FixRemote.run(this.root, config.modulo);\n        }\n    }\n    mostrarAyuda() {\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Descripción\")}: Corrige los códigos HASH y versión de los módulos en MySQL.`);\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Uso\")}:         ${Colors.colorize([Colors.FgBlue], \"yarn mrlang\")} ${Colors.colorize([Colors.FgGreen], \"pull\")} ${Colors.colorize([Colors.FgYellow], \"[opciones]\")}`);\n        console.log(\"\");\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgYellow], \"[opciones]\")}:`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgMagenta], \"Opciones disponibles:\")}`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgBlue], \"-m\")} ${Colors.colorize([Colors.FgYellow], \"--modulo\")}=${Colors.colorize([Colors.FgGreen], \"<modulo>\")}:    Indica el módulo a cargar`);\n        console.log(`                         ${Colors.colorize([Colors.FgWhite], \"Se puede especificar múltiples veces\")}`);\n        console.log(`${Colors.colorize([Colors.FgBlue], \"-h\")} ${Colors.colorize([Colors.FgYellow], \"--help\")}:               Muestra la ayuda`);\n        console.groupEnd();\n        console.groupEnd();\n        console.log(\"\");\n        console.groupEnd();\n    }\n}\n","import { Colors } from \"services-comun/tools/src/mrpack/clases/colors\";\nimport { Modulo } from \"../modulo\";\nexport class ModuloGenerate extends Modulo {\n    /* STATIC */\n    static OPTIONS = {\n        ...Modulo.OPTIONS,\n        options: {\n            ...Modulo.OPTIONS.options,\n            watch: { type: \"boolean\", default: false, },\n        },\n        strict: true,\n    };\n    static run() {\n        super.run(new this(this.OPTIONS));\n    }\n    /* INSTANCE */\n    constructor(config) {\n        super(config);\n    }\n    async parseParams(config) {\n        if (config.help) {\n            this.mostrarAyuda();\n        }\n        else {\n            const { Generate } = await import(/* webpackChunkName: \"mrlang/generate\" */ \"../clases/generate\");\n            await Generate.run(this.root, config.watch);\n        }\n    }\n    mostrarAyuda() {\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Descripción\")}: Genera las clases de traducción a partir de los JSON.`);\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Uso\")}:         ${Colors.colorize([Colors.FgBlue], \"yarn mrlang\")} ${Colors.colorize([Colors.FgGreen], \"pull\")} ${Colors.colorize([Colors.FgYellow], \"[opciones]\")}`);\n        console.log(\"\");\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgYellow], \"[opciones]\")}:`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgMagenta], \"Opciones disponibles:\")}`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgBlue], \"  \")} ${Colors.colorize([Colors.FgYellow], \"--watch\")}:                 Observa los cambios en los JSON y regenera automáticamente`);\n        console.log(`${Colors.colorize([Colors.FgBlue], \"-h\")} ${Colors.colorize([Colors.FgYellow], \"--help\")}:                  Muestra la ayuda`);\n        console.groupEnd();\n        console.groupEnd();\n        console.log(\"\");\n        console.groupEnd();\n    }\n}\n","import { Colors } from \"services-comun/tools/src/mrpack/clases/colors\";\nimport { Modulo } from \"../modulo\";\nexport class ModuloInit extends Modulo {\n    /* STATIC */\n    static OPTIONS = {\n        ...Modulo.OPTIONS,\n        options: {\n            ...Modulo.OPTIONS.options,\n        },\n        strict: true,\n    };\n    static run() {\n        super.run(new this(this.OPTIONS));\n    }\n    /* INSTANCE */\n    constructor(config) {\n        super(config);\n    }\n    async parseParams(config) {\n        if (config.help) {\n            this.mostrarAyuda();\n        }\n        else {\n            const { Init } = await import(/* webpackChunkName: \"mrlang/init\" */ \"../clases/init\");\n            await Init.run(this.root);\n        }\n    }\n    mostrarAyuda() {\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Descripción\")}: Inicializa el proyecto de traducciones.`);\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Uso\")}:         ${Colors.colorize([Colors.FgBlue], \"yarn mrlang\")} ${Colors.colorize([Colors.FgGreen], \"init\")} ${Colors.colorize([Colors.FgYellow], \"[opciones]\")}`);\n        console.log(\"\");\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgYellow], \"[opciones]\")}:`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgMagenta], \"Opciones disponibles:\")}`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgBlue], \"-h\")} ${Colors.colorize([Colors.FgYellow], \"--help\")}:                  Muestra la ayuda`);\n        console.groupEnd();\n        console.groupEnd();\n        console.log(\"\");\n        console.groupEnd();\n    }\n}\n","import { Colors } from \"services-comun/tools/src/mrpack/clases/colors\";\nimport { Modulo } from \"../modulo\";\nexport class ModuloPull extends Modulo {\n    /* STATIC */\n    static OPTIONS = {\n        ...Modulo.OPTIONS,\n        options: {\n            ...Modulo.OPTIONS.options,\n            modulo: { type: \"string\", short: \"m\", multiple: true, },\n        },\n        strict: true,\n    };\n    static run() {\n        super.run(new this(this.OPTIONS));\n    }\n    /* INSTANCE */\n    constructor(config) {\n        super(config);\n    }\n    async parseParams(config) {\n        if (config.help) {\n            this.mostrarAyuda();\n        }\n        else {\n            const { Pull } = await import(/* webpackChunkName: \"mrlang/pull\" */ \"../clases/pull\");\n            await Pull.run(this.root, config.modulo);\n        }\n    }\n    mostrarAyuda() {\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Descripción\")}: Actualiza los ficheros de traducción locales.`);\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Uso\")}:         ${Colors.colorize([Colors.FgBlue], \"yarn mrlang\")} ${Colors.colorize([Colors.FgGreen], \"pull\")} ${Colors.colorize([Colors.FgYellow], \"[opciones]\")}`);\n        console.log(\"\");\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgYellow], \"[opciones]\")}:`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgMagenta], \"Opciones disponibles:\")}`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgBlue], \"-m\")} ${Colors.colorize([Colors.FgYellow], \"--modulo\")}=${Colors.colorize([Colors.FgGreen], \"<modulo>\")}:       Indica el módulo a cargar`);\n        console.log(`                            ${Colors.colorize([Colors.FgWhite], \"Se puede especificar múltiples veces para indicar mútiples módulos\")}`);\n        console.log(`${Colors.colorize([Colors.FgBlue], \"-h\")} ${Colors.colorize([Colors.FgYellow], \"--help\")}:                  Muestra la ayuda`);\n        console.groupEnd();\n        console.groupEnd();\n        console.log(\"\");\n        console.groupEnd();\n    }\n}\n","import { Colors } from \"services-comun/tools/src/mrpack/clases/colors\";\nimport { Modulo } from \"../modulo\";\nexport class ModuloPush extends Modulo {\n    /* STATIC */\n    static OPTIONS = {\n        ...Modulo.OPTIONS,\n        options: {\n            ...Modulo.OPTIONS.options,\n        },\n        strict: true,\n    };\n    static run() {\n        super.run(new this(this.OPTIONS));\n    }\n    /* INSTANCE */\n    constructor(config) {\n        super(config);\n    }\n    async parseParams(config) {\n        if (config.help) {\n            this.mostrarAyuda();\n        }\n        else {\n            const { Push } = await import(/* webpackChunkName: \"mrlang/push\" */ \"../clases/push\");\n            await Push.run(this.root);\n        }\n    }\n    mostrarAyuda() {\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Descripción\")}: Sube los cambios a la Base de Datos de traducción.`);\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Uso\")}:         ${Colors.colorize([Colors.FgBlue], \"yarn mrlang\")} ${Colors.colorize([Colors.FgGreen], \"push\")} ${Colors.colorize([Colors.FgYellow], \"[opciones]\")}`);\n        console.log(\"\");\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgYellow], \"[opciones]\")}:`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgMagenta], \"Opciones disponibles:\")}`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgBlue], \"-h\")} ${Colors.colorize([Colors.FgYellow], \"--help\")}:               Muestra la ayuda`);\n        console.groupEnd();\n        console.groupEnd();\n        console.log(\"\");\n        console.groupEnd();\n    }\n}\n","import { Colors } from \"services-comun/tools/src/mrpack/clases/colors\";\nimport { Modulo } from \"./modulo\";\nimport { ModuloFRemote } from \"./modulos/fremote\";\nimport { ModuloGenerate } from \"./modulos/generate\";\nimport { ModuloInit } from \"./modulos/init\";\nimport { ModuloPull } from \"./modulos/pull\";\nimport { ModuloPush } from \"./modulos/push\";\nexport class MRLang extends Modulo {\n    /* STATIC */\n    static OPTIONS = {\n        ...Modulo.OPTIONS,\n        options: {\n            ...Modulo.OPTIONS.options,\n        },\n        strict: false,\n    };\n    static MODULOS = [\n        \"fremote\",\n        \"generate\",\n        \"init\",\n        \"pull\",\n        \"push\",\n    ];\n    static run() {\n        super.run(new this(this.OPTIONS));\n    }\n    /* INSTANCE */\n    constructor(config) {\n        super(config);\n    }\n    async parsePositionals(positionals) {\n        if (positionals.length != 1 || !MRLang.MODULOS.includes(positionals[0])) {\n            this.mostrarAyuda();\n            return Promise.reject();\n        }\n    }\n    async parseParams(config, positionals) {\n        switch (positionals[0]) {\n            case \"fremote\":\n                ModuloFRemote.run();\n                break;\n            case \"generate\":\n                ModuloGenerate.run();\n                break;\n            case \"init\":\n                ModuloInit.run();\n                break;\n            case \"pull\":\n                ModuloPull.run();\n                break;\n            case \"push\":\n                ModuloPush.run();\n                break;\n            default:\n                this.mostrarAyuda();\n                return Promise.reject();\n        }\n    }\n    mostrarAyuda() {\n        console.log(`${Colors.colorize([Colors.FgCyan, Colors.Bright], \"Uso\")}: ${Colors.colorize([Colors.FgBlue], \"yarn mrlang\")} ${Colors.colorize([Colors.FgGreen], \"<modulo>\")} ${Colors.colorize([Colors.FgYellow], \"[opciones]\")}`);\n        console.log(\"\");\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgGreen], \"<modulo>\")}:`);\n        console.group();\n        console.log(`Indica el módulo a ejecutar.`);\n        console.log(`${Colors.colorize([Colors.FgMagenta], \"Módulos disponibles:\")}`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgBlue], \"fremote\")}:  Corrige las versiones de los módulos remotos`);\n        console.log(`${Colors.colorize([Colors.FgBlue], \"generate\")}: Regenera las clases TS a partir de los JSON`);\n        console.log(`${Colors.colorize([Colors.FgBlue], \"init\")}:     Inicializa el proyecto de traducciones`);\n        console.log(`${Colors.colorize([Colors.FgBlue], \"pull\")}:     Compila el proyecto en modo producción`);\n        console.log(`${Colors.colorize([Colors.FgBlue], \"push\")}:     Sube los frameworks para compartirlos entre proyectos`);\n        console.groupEnd();\n        console.log(`${Colors.colorize([Colors.FgRed], \"Solo puede indicarse uno\")}`);\n        console.groupEnd();\n        console.log(\"\");\n        console.log(`${Colors.colorize([Colors.FgYellow], \"[opciones]\")}:`);\n        console.group();\n        console.log(`Permiten customizar el módulo.`);\n        console.log(`${Colors.colorize([Colors.FgMagenta], \"Opciones disponibles:\")}`);\n        console.group();\n        console.log(`${Colors.colorize([Colors.FgBlue], \"-h\")} ${Colors.colorize([Colors.FgYellow], \"--help\")}:  Muestra la ayuda`);\n        console.log(`            ${Colors.colorize([Colors.FgWhite], \"Puede especificar esta opción en cualquier momento para mostrar la ayuda del módulo\")}`);\n        console.groupEnd();\n        console.groupEnd();\n        console.log(\"\");\n        console.groupEnd();\n    }\n}\n","import { MRLang } from \"./mrlang\";\nprocess.chdir(`../..`);\nMRLang.run();\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"tslib\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"mysql2/promise\");","import { error, info, warning } from \"../../utiles/log\";\nimport { md5 } from \"../../utiles/hash\";\nimport { random } from \"../../utiles/random\";\nexport var TIsolationLevel;\n(function (TIsolationLevel) {\n    TIsolationLevel[TIsolationLevel[\"REPEATABLE_READ\"] = 1] = \"REPEATABLE_READ\";\n    TIsolationLevel[TIsolationLevel[\"READ_COMMITTED\"] = 2] = \"READ_COMMITTED\";\n    TIsolationLevel[TIsolationLevel[\"READ_UNCOMMITTED\"] = 3] = \"READ_UNCOMMITTED\";\n    TIsolationLevel[TIsolationLevel[\"SERIALIZABLE\"] = 4] = \"SERIALIZABLE\";\n})(TIsolationLevel || (TIsolationLevel = {}));\nexport class Transaction {\n    pool;\n    /* STATIC */\n    static ISOLATION_LEVEL_MAP = new Map([\n        [TIsolationLevel.REPEATABLE_READ, \"REPEATABLE READ\"],\n        [TIsolationLevel.READ_COMMITTED, \"READ COMMITTED\"],\n        [TIsolationLevel.READ_UNCOMMITTED, \"READ UNCOMMITTED\"],\n        [TIsolationLevel.SERIALIZABLE, \"SERIALIZABLE\"]\n    ]);\n    static isolationLevel(level) {\n        return this.ISOLATION_LEVEL_MAP.get(level) ?? \"READ_COMMITTED\";\n    }\n    /* INSTANCE */\n    _connection;\n    get connection() {\n        return this._connection ??= this.pool.getConnection();\n    }\n    hash;\n    constructor(pool) {\n        this.pool = pool;\n        const hash = md5(`${random(32)}-${Date.now()}-${random(32)}`);\n        this.hash = `${hash.substring(0, 3)}${hash.substring(29)}`;\n    }\n    // public get hash(): string {\n    //     return this._hash;\n    // }\n    /**\n     * Inicia una nueva transacción.\n     * @param level Nivel de aislamiento de la transacción.\n     * @param name Nombre personalizado de la transacción.\n     */\n    async start(level = TIsolationLevel.READ_COMMITTED, name = '') {\n        const connection = await this.connection;\n        await connection.execute(`set transaction isolation level ${Transaction.isolationLevel(level)}`);\n        await connection.beginTransaction();\n        if (!PRODUCCION)\n            info(`Transaction ${this.hash} => BEGIN${name ? `: ${name}` : ``}`);\n        return this;\n    }\n    async executeQuery(sql, params = []) {\n        if (!PRODUCCION)\n            info(`Transaction ${this.hash} => QUERY: ${sql} | PARAMS: [${params}]`);\n        const connection = await this.connection;\n        const [rows] = await connection.query(sql, params);\n        return rows;\n    }\n    async query(sql, params = []) {\n        return await this.executeQuery(sql, params);\n    }\n    async execute(sql, params = []) {\n        const connection = await this.connection;\n        const [rows] = await connection.query(sql, params);\n        return rows;\n    }\n    async insert(sql, params = []) {\n        if (!PRODUCCION)\n            info(`Transaction ${this.hash} => INSERT: ${sql} | PARAMS: [${params}]`);\n        return await this.execute(sql, params);\n    }\n    async update(sql, params = []) {\n        if (!PRODUCCION)\n            info(`Transaction ${this.hash} => UPDATE: ${sql} | PARAMS: [${params}]`);\n        return await this.execute(sql, params);\n    }\n    async delete(sql, params = []) {\n        if (!PRODUCCION)\n            info(`Transaction ${this.hash} => DELETE: ${sql} | PARAMS: [${params}]`);\n        return await this.execute(sql, params);\n    }\n    async truncate(table) {\n        if (!PRODUCCION)\n            info(`Transaction ${this.hash} => TRUNCATE: ${table}`);\n        return await this.execute(`TRUNCATE TABLE ${table}`);\n    }\n    /**\n     * Confirma los cambios de la transacción.\n     */\n    async commit() {\n        const connection = await this.connection;\n        await connection.commit();\n        if (!PRODUCCION)\n            info(`Transaction ${this.hash} => COMMIT`);\n        await this.release();\n    }\n    /**\n     * Deshace los cambios realizados por la transacción antes de que los confirme.\n     */\n    async rollback() {\n        const connection = await this.connection;\n        await connection.rollback();\n        if (!PRODUCCION)\n            warning(`Transaction ${this.hash} => ROLLBACK`);\n        await this.release();\n    }\n    /**\n     * Libera la conexión.\n     * @private\n     */\n    async release() {\n        const connection = await this.connection;\n        connection.release();\n    }\n    async lastInsertId() {\n        return this.query(\"SELECT LAST_INSERT_ID() AS id\").then(rows => rows[0].id);\n    }\n}\nexport function transactional(db, name = '', level = TIsolationLevel.READ_COMMITTED) {\n    return (originalMethod) => {\n        return function (...args) {\n            return Promise.resolve().then(async () => {\n                let t = args.find(arg => arg instanceof Transaction);\n                const initial = t === undefined;\n                if (!t) {\n                    t = await db.transaction();\n                    await t.start(level, name);\n                }\n                else {\n                    if (!PRODUCCION)\n                        info(`Transaction ${t.hash} => JOIN${name ? `: ${name}` : ``}`);\n                }\n                let salida;\n                try {\n                    salida = await originalMethod.apply(this, [...args, t]);\n                    if (initial) {\n                        await t.commit();\n                    }\n                }\n                catch (e) {\n                    if (initial) {\n                        error(`Transaction ${t.hash} failed: `, e);\n                        await t.rollback();\n                        salida = Promise.reject(e);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n                return salida;\n            });\n        };\n    };\n}\n// type TDecoratorBuilder = (target: any, propertyKey: string, descriptor: PropertyDescriptor)=>void;\n// export function transactional(name: string = '', level: TIsolationLevel = TIsolationLevel.READ_COMMITTED): TDecoratorBuilder {\n//     return (target: any, propertyKey: string, descriptor: PropertyDescriptor): void => {\n//\n//         const original = Symbol(propertyKey);\n//         target[original] = descriptor.value;\n//\n//         descriptor.value = async function (...args: any[]) {\n//             const t: Transaction = await db.transaction();\n//             if (!PRODUCCION) info(`Transaction ${t.hash} => BEGIN${name ? `: ${name}` : ``}`);\n//             await t.start(level);\n//             let salida;\n//             try {\n//                 salida = await target[original].apply(this, [...args, t]);\n//                 await t.commit();\n//                 if (!PRODUCCION) info(`Transaction ${t.hash} => COMMIT`);\n//             } catch (e) {\n//                 error(`Transaction ${t.hash} failed: `, e);\n//                 await t.rollback();\n//                 if (!PRODUCCION) warning(`Transaction ${t.hash} => ROLLBACK`);\n//                 salida = Promise.reject(e);\n//             }\n//             return salida;\n//         }\n//     };\n// }\n","export function arrayEquals(array1, array2) {\n    return array1.filter((valor) => array2.includes(valor)).length == array1.length;\n}\nexport function unique(array) {\n    return array.filter((item, i, ar) => ar.indexOf(item) === i);\n}\nexport function arrayChop(array, length) {\n    if (length <= 0) {\n        length = array.length;\n    }\n    const salida = [];\n    const total = array.length;\n    let inicio = 0;\n    while (inicio < total) {\n        const fin = inicio + length;\n        salida.push(array.slice(inicio, fin));\n        inicio = fin;\n    }\n    return salida;\n}\n","import * as tslib_1 from \"tslib\";\nimport { createPoolCluster, escape, } from \"mysql2/promise\";\nimport { watch } from \"node:fs\";\nimport { PromiseDelayed } from \"../../utiles/promise\";\nimport { Transaction } from \"./transaction\";\nimport { arrayChop } from \"../../utiles/array\";\nimport { error, info, warning } from \"../../utiles/log\";\nimport { readFileString, readJSON } from \"../../utiles/fs\";\nexport class MySQL {\n    credenciales;\n    database;\n    /* STATIC */\n    static build({ credenciales = `files/credenciales/mysql.json`, database = DATABASE } = {}) {\n        const env_1 = { stack: [], error: void 0, hasError: false };\n        try {\n            const salida = __addDisposableResource(env_1, new this(credenciales, database), false);\n            return salida;\n        }\n        catch (e_1) {\n            env_1.error = e_1;\n            env_1.hasError = true;\n        }\n        finally {\n            __disposeResources(env_1);\n        }\n    }\n    /* INSTANCE */\n    _cluster;\n    get cluster() {\n        return this._cluster ??= this.open();\n    }\n    _master;\n    get master() {\n        return this._master ??= this.cluster.then(cluster => cluster.of(\"MASTER\"));\n    }\n    _slave;\n    get slave() {\n        return this._slave ??= this.cluster.then(cluster => cluster.of(\"SLAVE*\"));\n    }\n    watcher;\n    // LLAMAR AL CONSTRUCTOR DIRÉCTAMENTE QUEDA PROHIBIDO, USAR MySQL.build() EN SU LUGAR\n    constructor(credenciales, database) {\n        this.credenciales = credenciales;\n        this.database = database;\n    }\n    [Symbol.dispose]() {\n        this.stopWatcher();\n        this.reset().then(() => { }).catch((err) => error(err));\n    }\n    async close() {\n        this.stopWatcher();\n        await this.reset();\n    }\n    async reset() {\n        if (this._cluster != undefined) {\n            const cluster = this._cluster;\n            this._cluster = undefined;\n            this._master = undefined;\n            this._slave = undefined;\n            const pool = await cluster;\n            await pool.end();\n        }\n    }\n    async open() {\n        const data = await readJSON(this.credenciales);\n        const cluster = createPoolCluster({\n            removeNodeErrorCount: 3600, // eliminar el nodo tras 1 hora de errores\n            restoreNodeTimeout: 1000, // probar a reconectar tras 1 segundo\n        });\n        if (\"slaves\" in data) {\n            let ssl;\n            if (data.ssl != undefined) {\n                const [ca, cert, key] = await Promise.all([\n                    readFileString(data.ssl.ca),\n                    readFileString(data.ssl.cert),\n                    readFileString(data.ssl.key),\n                ]);\n                ssl = {\n                    ca,\n                    cert,\n                    key,\n                    rejectUnauthorized: true,\n                };\n            }\n            else {\n                ssl = undefined;\n            }\n            data.common ??= {};\n            if (data.master != undefined) {\n                cluster.add(\"MASTER\", {\n                    charset: \"utf8mb4\",\n                    database: this.database,\n                    ssl,\n                    ...data.common,\n                    ...data.master,\n                });\n            }\n            for (let i = 0; i < data.slaves.length; i++) {\n                cluster.add(`SLAVE${i}`, {\n                    charset: \"utf8mb4\",\n                    database: this.database,\n                    ssl,\n                    ...data.common,\n                    ...data.slaves[i],\n                });\n            }\n        }\n        else {\n            cluster.add(\"MASTER\", {\n                charset: \"utf8mb4\",\n                database: this.database,\n                ...data,\n            });\n            cluster.add(\"SLAVE1\", {\n                charset: \"utf8mb4\",\n                database: this.database,\n                ...data,\n            });\n        }\n        // await this.checkConexion(pool);\n        this.startWatcher();\n        return cluster;\n    }\n    startWatcher() {\n        if (PRODUCCION && this.watcher == undefined && this.credenciales) {\n            this.watcher = watch(this.credenciales, () => {\n                info(\"Cambiando credenciales de MySQL\");\n                this.reset().then(() => { }).catch((err) => error(err));\n            });\n        }\n    }\n    stopWatcher() {\n        if (this.watcher != undefined) {\n            this.watcher.close();\n            this.watcher = undefined;\n        }\n    }\n    escape(value) {\n        return escape(value);\n    }\n    async query(sql, params = [], { master = false, transaction, fn } = {}) {\n        const select = sql.startsWith(\"SELECT\") || sql.startsWith(\"select\");\n        if (!select) {\n            error(`Consulta no select: ${sql} => use la función adecuada en lugar de db.query`);\n        }\n        let registros;\n        if (transaction) {\n            registros = await transaction.query(sql, params);\n        }\n        else {\n            const pool = select && !master ? this.slave : this.master;\n            const db = await pool;\n            const [rows] = await db.query(sql, params);\n            registros = rows;\n        }\n        if (select && fn != undefined) {\n            return await Promise.all(registros.map(fn));\n        }\n        return registros;\n    }\n    async queryOne(sql, params = [], options = {}) {\n        const [row] = await this.query(sql, params, options);\n        return row ?? await Promise.reject(`No se encontró ningún registro`);\n    }\n    async select(sql, params = [], { master = false, transaction, fn } = {}) {\n        let registros;\n        if (transaction) {\n            registros = await transaction.query(sql, params);\n        }\n        else {\n            const pool = !master ? this.slave : this.master;\n            const db = await pool;\n            const [rows] = await db.query(sql, params);\n            registros = rows;\n        }\n        if (fn != undefined) {\n            return await Promise.all(registros.map(fn));\n        }\n        return registros;\n    }\n    async load(options) {\n        const db = await this.master;\n        const [rows] = await db.query(options);\n        return rows;\n    }\n    async masterQuery(sql, params = [], retry = 0) {\n        const db = await this.master;\n        try {\n            const [rows] = await db.query(sql, params);\n            return rows;\n        }\n        catch (err) {\n            if (err.code == \"ER_LOCK_DEADLOCK\" && retry < 10) {\n                await PromiseDelayed(Math.floor(Math.random() * 100) + retry * 1000);\n                return this.masterQuery(sql, params, retry + 1);\n            }\n            warning(`DEADLOCK en consulta \"${sql}\" ${retry}`);\n            return Promise.reject(err);\n        }\n    }\n    async insert(sql, params = [], { transaction } = {}) {\n        if (transaction) {\n            return transaction.insert(sql, params);\n        }\n        return this.masterQuery(sql, params);\n    }\n    async update(sql, params = [], { transaction } = {}) {\n        if (transaction) {\n            return transaction.update(sql, params);\n        }\n        return this.masterQuery(sql, params);\n    }\n    async delete(sql, params = [], { transaction } = {}) {\n        if (transaction) {\n            return transaction.delete(sql, params);\n        }\n        return this.masterQuery(sql, params);\n    }\n    async truncate(table, { transaction } = {}) {\n        if (transaction) {\n            return transaction.truncate(table);\n        }\n        return this.masterQuery(`TRUNCATE TABLE ${table};`);\n    }\n    async bulkInsert(registros, { transaction, size } = {}) {\n        if (registros.length > 0) {\n            const blockSize = size ?? 0;\n            const grupos = new Map();\n            for (const actual of registros) {\n                if (!grupos.has(actual.query)) {\n                    grupos.set(actual.query, [actual]);\n                }\n                else {\n                    const grupo = grupos.get(actual.query);\n                    grupo.push(actual);\n                }\n            }\n            const inserts = [];\n            grupos.forEach((value, key) => {\n                if (value.length > 0) {\n                    const valores = [\n                        ...value.map(actual => `(${[...actual.params.map(valor => `${escape(valor)}`),].join(\",\")})`),\n                    ];\n                    let coletilla;\n                    if (value[0].duplicate == undefined || value[0].duplicate.length == 0) {\n                        coletilla = \"\";\n                    }\n                    else {\n                        coletilla = ` as new ON DUPLICATE KEY UPDATE ${value[0].duplicate.map(actual => `${actual}=new.${actual}`).join(\", \")}`;\n                    }\n                    const base = key.split(\"VALUES\")[0].split(\"values\")[0];\n                    for (const bloque of arrayChop(valores, Math.min(blockSize, valores.length))) {\n                        inserts.push(`${base} VALUES ${bloque.join(\",\")} ${coletilla}`);\n                    }\n                }\n            });\n            for (const insert of inserts) {\n                await this.insert(insert, [], { transaction }).catch(async (err) => {\n                    warning(`ERROR Insertando registros`, err, insert);\n                    if (transaction) {\n                        return Promise.reject(err);\n                    }\n                });\n                await PromiseDelayed();\n            }\n        }\n    }\n    async bulkUpdate(registros, blockSize = 0) {\n        if (registros.length > 0) {\n            const grupos = new Map();\n            for (const actual of registros) {\n                if (!grupos.has(actual.query)) {\n                    grupos.set(actual.query, [actual]);\n                }\n                else {\n                    const grupo = grupos.get(actual.query);\n                    grupo.push(actual);\n                }\n            }\n            const inserts = [];\n            grupos.forEach((value, key) => {\n                if (value.length > 0) {\n                    const valores = [\n                        ...value.map(actual => `(${[...actual.params.map(valor => `${escape(valor)}`),].join(\",\")})`),\n                    ];\n                    if (valores.length > 0) {\n                        const base = key.split(\"VALUES\")[0].split(\"values\")[0];\n                        for (const bloque of arrayChop(valores, Math.min(blockSize, valores.length))) {\n                            inserts.push(`${base} VALUES ${bloque.join(\",\")} ON DUPLICATE KEY UPDATE ${value[0].update}`);\n                        }\n                    }\n                }\n            });\n            for (const insert of inserts) {\n                await this.insert(insert).catch(async (err) => {\n                    warning(`ERROR Actualizando registros`, err, insert);\n                });\n            }\n        }\n    }\n    async transaction() {\n        return new Transaction(await this.master);\n    }\n}\n","import { MySQL } from \"../../../modules/database/mysql\";\nconst db = MySQL.build({ credenciales: `i18n/.credenciales/mysql.json` });\nexport default db;\n","import { Colors as ColorsBase } from \"../../../../modules/utiles/colors\";\nexport class Colors extends ColorsBase {\n    /* STATIC */\n    static COLORS = [\n        [this.FgCyan, this.Bright],\n        [this.FgGreen, this.Bright],\n        [this.FgMagenta, this.Bright],\n        [this.FgYellow, this.Bright],\n        [this.FgRed, this.Bright],\n        [this.FgWhite, this.Bright],\n        [this.FgBlue, this.Bright],\n        [this.FgCyan],\n        [this.FgGreen],\n        [this.FgMagenta],\n        [this.FgYellow],\n        [this.FgRed],\n        [this.FgWhite],\n        [this.FgBlue],\n        [this.FgCyan, this.Dim],\n        [this.FgGreen, this.Dim],\n        [this.FgMagenta, this.Dim],\n        [this.FgYellow, this.Dim],\n        [this.FgRed, this.Dim],\n        [this.FgWhite, this.Dim],\n        [this.FgBlue, this.Dim],\n    ];\n    static I = 0;\n    static nextColor() {\n        const color = this.COLORS[this.I];\n        this.I = (this.I + 1) % this.COLORS.length;\n        return color;\n    }\n    static resetNext() {\n        this.I = 0;\n    }\n}\n","import { parseArgs } from \"node:util\";\nimport { PromiseDelayed } from \"../../../modules/utiles/promise\";\nexport class Modulo {\n    config;\n    /* STATIC */\n    static OPTIONS = {\n        options: {\n            help: { type: \"boolean\", short: \"h\", default: false, },\n        },\n        strict: true,\n        allowPositionals: true,\n    };\n    static run(modulo) {\n        PromiseDelayed()\n            .then(async () => modulo.run())\n            .catch((err) => {\n            if (err != undefined) {\n                console.error(err);\n                // } else {\n                //     modulo.mostrarAyuda();\n            }\n        });\n    }\n    /* INSTANCE */\n    root;\n    constructor(config) {\n        this.config = config;\n        this.root = process.cwd();\n    }\n    async run() {\n        const { values, positionals } = parseArgs(this.config);\n        await this.parsePositionals(positionals);\n        await this.parseParams(values, positionals);\n    }\n    async parsePositionals(positionals) {\n    }\n}\n","module.exports = require(\"node:cluster\");","module.exports = require(\"node:crypto\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:fs/promises\");","module.exports = require(\"node:os\");","module.exports = require(\"node:path\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");"],"names":["Colors","static","colorize","config","text","tty","join","this","Reset","promisify","pipeline","async","readFileBuffer","file","readFile","readFileString","toString","readJSON","buffer","JSON","parse","e","Promise","reject","isDir","dir","excepcion","stat","isDirectory","isFile","mkdir","recursive","rename","antiguo","nuevo","then","catch","rmdir","path","rm","force","safeWrite","local","data","sobreescribir","rnd","resolve","flag","err","oldPath","newPath","F_OK","exists","unlink","overwrite","ok","md5Dir","salida","push","actual","readdir","name","md5DirExec","length","md5","entrada","createHash","update","digest","KUBERNETES","process","env","ESTATICO","worker","id","partes","split","last","pop","undefined","generarEstatico","info","txt","console","warning","warn","error","PromiseDelayed","delay","setTimeout","Error","letras","random","chars","i","charAt","Math","round","Modulo","run","modulo","close","ModuloFRemote","OPTIONS","options","type","short","multiple","strict","super","constructor","parseParams","help","mostrarAyuda","FixRemote","root","log","FgCyan","Bright","FgBlue","FgGreen","FgYellow","group","FgMagenta","FgWhite","groupEnd","ModuloGenerate","watch","default","Generate","ModuloInit","Init","ModuloPull","Pull","ModuloPush","Push","MRLang","parsePositionals","positionals","MODULOS","includes","FgRed","chdir","require","TIsolationLevel","Transaction","pool","Map","REPEATABLE_READ","READ_COMMITTED","READ_UNCOMMITTED","SERIALIZABLE","isolationLevel","level","ISOLATION_LEVEL_MAP","get","_connection","connection","getConnection","hash","Date","now","substring","start","execute","beginTransaction","executeQuery","sql","params","rows","query","insert","truncate","table","commit","release","rollback","lastInsertId","arrayChop","array","total","inicio","fin","slice","MySQL","credenciales","database","build","env_1","stack","hasError","__addDisposableResource","e_1","__disposeResources","_cluster","cluster","open","_master","master","of","_slave","slave","watcher","Symbol","dispose","stopWatcher","reset","end","createPoolCluster","removeNodeErrorCount","restoreNodeTimeout","ssl","ca","cert","key","all","rejectUnauthorized","common","add","charset","slaves","startWatcher","escape","value","transaction","fn","select","startsWith","registros","db","map","queryOne","row","load","masterQuery","retry","code","floor","delete","bulkInsert","size","blockSize","grupos","has","set","inserts","forEach","valores","valor","coletilla","duplicate","base","bloque","min","bulkUpdate","Dim","nextColor","color","COLORS","I","resetNext","allowPositionals","cwd","values","parseArgs","module","exports"],"sourceRoot":""}
{"version":3,"file":"plugins/232.js","mappings":"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","sources":["webpack://services-comun/../../.yarn/cache/tree-kill-npm-1.2.2-3da0e5a759-49117f5f41.zip/node_modules/tree-kill/index.js","webpack://services-comun/./modules/utiles/fecha.ts","webpack://services-comun/./tools/src/mrpack/clases/log.ts","webpack://services-comun/./tools/src/mrpack/clases/workspace.ts","webpack://services-comun/./tools/src/mrpack/clases/workspace/service.ts"],"sourcesContent":["'use strict';\n\nvar childProcess = require('child_process');\nvar spawn = childProcess.spawn;\nvar exec = childProcess.exec;\n\nmodule.exports = function (pid, signal, callback) {\n    if (typeof signal === 'function' && callback === undefined) {\n        callback = signal;\n        signal = undefined;\n    }\n\n    pid = parseInt(pid);\n    if (Number.isNaN(pid)) {\n        if (callback) {\n            return callback(new Error(\"pid must be a number\"));\n        } else {\n            throw new Error(\"pid must be a number\");\n        }\n    }\n\n    var tree = {};\n    var pidsToProcess = {};\n    tree[pid] = [];\n    pidsToProcess[pid] = 1;\n\n    switch (process.platform) {\n    case 'win32':\n        exec('taskkill /pid ' + pid + ' /T /F', callback);\n        break;\n    case 'darwin':\n        buildProcessTree(pid, tree, pidsToProcess, function (parentPid) {\n          return spawn('pgrep', ['-P', parentPid]);\n        }, function () {\n            killAll(tree, signal, callback);\n        });\n        break;\n    // case 'sunos':\n    //     buildProcessTreeSunOS(pid, tree, pidsToProcess, function () {\n    //         killAll(tree, signal, callback);\n    //     });\n    //     break;\n    default: // Linux\n        buildProcessTree(pid, tree, pidsToProcess, function (parentPid) {\n          return spawn('ps', ['-o', 'pid', '--no-headers', '--ppid', parentPid]);\n        }, function () {\n            killAll(tree, signal, callback);\n        });\n        break;\n    }\n};\n\nfunction killAll (tree, signal, callback) {\n    var killed = {};\n    try {\n        Object.keys(tree).forEach(function (pid) {\n            tree[pid].forEach(function (pidpid) {\n                if (!killed[pidpid]) {\n                    killPid(pidpid, signal);\n                    killed[pidpid] = 1;\n                }\n            });\n            if (!killed[pid]) {\n                killPid(pid, signal);\n                killed[pid] = 1;\n            }\n        });\n    } catch (err) {\n        if (callback) {\n            return callback(err);\n        } else {\n            throw err;\n        }\n    }\n    if (callback) {\n        return callback();\n    }\n}\n\nfunction killPid(pid, signal) {\n    try {\n        process.kill(parseInt(pid, 10), signal);\n    }\n    catch (err) {\n        if (err.code !== 'ESRCH') throw err;\n    }\n}\n\nfunction buildProcessTree (parentPid, tree, pidsToProcess, spawnChildProcessesList, cb) {\n    var ps = spawnChildProcessesList(parentPid);\n    var allData = '';\n    ps.stdout.on('data', function (data) {\n        var data = data.toString('ascii');\n        allData += data;\n    });\n\n    var onClose = function (code) {\n        delete pidsToProcess[parentPid];\n\n        if (code != 0) {\n            // no more parent processes\n            if (Object.keys(pidsToProcess).length == 0) {\n                cb();\n            }\n            return;\n        }\n\n        allData.match(/\\d+/g).forEach(function (pid) {\n          pid = parseInt(pid, 10);\n          tree[parentPid].push(pid);\n          tree[pid] = [];\n          pidsToProcess[pid] = 1;\n          buildProcessTree(pid, tree, pidsToProcess, spawnChildProcessesList, cb);\n        });\n    };\n\n    ps.on('close', onClose);\n}\n","export var TTimeUnit;\n(function (TTimeUnit) {\n    TTimeUnit[\"DAY\"] = \"d\";\n    TTimeUnit[\"HOUR\"] = \"h\";\n    TTimeUnit[\"MINUTE\"] = \"m\";\n    TTimeUnit[\"SECOND\"] = \"s\";\n    TTimeUnit[\"MILLISECOND\"] = \"ms\";\n})(TTimeUnit || (TTimeUnit = {}));\nexport class Fecha {\n    static MESES = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\n    static SEMANA = [\"Lunes\", \"Martes\", \"Miércoles\", \"Jueves\", \"Viernes\", \"Sábado\", \"Domingo\"];\n    static generarFechaMySQL(date) {\n        return [\n            date.getUTCFullYear(),\n            `00${date.getUTCMonth() + 1}`.slice(-2),\n            `00${date.getUTCDate()}`.slice(-2)\n        ].join(\"-\");\n    }\n    static generarFechaElastic(date, options = {}) {\n        options = {\n            anno: true,\n            mes: true,\n            dia: true,\n            ...options,\n        };\n        const campos = [];\n        if (options.anno) {\n            campos.push(`${date.getUTCFullYear()}`);\n        }\n        if (options.mes) {\n            campos.push(`00${date.getUTCMonth() + 1}`.slice(-2));\n        }\n        if (options.dia) {\n            campos.push(`00${date.getUTCDate()}`.slice(-2));\n        }\n        if (campos.length > 0) {\n            return campos.join(\".\");\n        }\n        return \"\";\n    }\n    static generarFechaNatural(date) {\n        return [\n            `00${date.getUTCDate()}`.slice(-2),\n            `00${date.getUTCMonth() + 1}`.slice(-2),\n            date.getUTCFullYear(),\n        ].join(\"/\");\n    }\n    static generarFechaNaturalConDiaSemana(date) {\n        return `${Fecha.SEMANA[(date.getUTCDay() - 1) >= 0 ? date.getUTCDay() - 1 : Fecha.SEMANA.length - 1]}, ` + [\n            `00${date.getUTCDate()}`.slice(-2),\n            `00${date.getUTCMonth() + 1}`.slice(-2),\n            date.getUTCFullYear(),\n        ].join(\"/\");\n    }\n    static generarFechaBloque(date) {\n        return [\n            date.getUTCFullYear(),\n            `00${date.getUTCMonth() + 1}`.slice(-2),\n            `00${date.getUTCDate()}`.slice(-2),\n        ].join(\"\");\n    }\n    static generarHora(date, tz = true) {\n        return [\n            `00${date.getUTCHours()}`.slice(-2),\n            `00${date.getUTCMinutes()}`.slice(-2),\n            `00${date.getUTCSeconds()}`.slice(-2)\n        ].join(\":\") + (tz ? \" UTC\" : \"\");\n        // const offset = date.getTimezoneOffset();\n        // if (offset!=0) {\n        //     const abs = Math.abs(offset);\n        //     salida += [\n        //         offset>0?\"+\": \"-\",\n        //         `00${Math.floor(abs/60)}`.slice(-2),\n        //         `00${abs%60}`.slice(-2),\n        //     ].join(\"\");\n        // }\n        //\n        // return salida;\n    }\n    static generarHoraMinuto(date, tz = true) {\n        return [\n            `00${date.getUTCHours()}`.slice(-2),\n            `00${date.getUTCMinutes()}`.slice(-2),\n        ].join(\":\") + (tz ? \" UTC\" : \"\");\n    }\n    static generarMarcaMinuto(date) {\n        return [\n            date.getUTCFullYear(),\n            `00${date.getUTCMonth() + 1}`.slice(-2),\n            `00${date.getUTCDate()}`.slice(-2),\n            `00${date.getUTCHours()}`.slice(-2),\n            `00${date.getUTCMinutes()}`.slice(-2)\n        ].join(\"\");\n    }\n    static generarMarcaMes(date = new Date()) {\n        return [\n            date.getUTCFullYear(),\n            `00${date.getUTCMonth() + 1}`.slice(-2)\n        ].join(\"\");\n    }\n    static generarVersion(date) {\n        return `${date.getUTCFullYear()}.${date.getUTCMonth() + 1}.${date.getUTCDate()}-${date.getUTCHours()}${`00${date.getUTCMinutes()}`.slice(-2)}${`00${date.getUTCSeconds()}`.slice(-2)}`;\n    }\n    static generarFechaHoraMySQL(date) {\n        return `${Fecha.generarFechaMySQL(date)} ${Fecha.generarHora(date, false)}`;\n    }\n    static generarFechaHoraNatural(date, tz = true) {\n        return `${Fecha.generarFechaNatural(date)} ${Fecha.generarHoraMinuto(date, tz)}`;\n    }\n    static generarFechaHoraNaturalConDiaSemana(date, tz = true) {\n        return `${Fecha.generarFechaNaturalConDiaSemana(date)} ${Fecha.generarHoraMinuto(date, tz)}`;\n    }\n    static generarIntervaloFechasNatural(inicio, fin) {\n        return inicio.getDate() == fin.getDate() && inicio.getMonth() == fin.getMonth() && inicio.getFullYear() == fin.getFullYear() ?\n            `${inicio.getDate()} ${this.MESES[inicio.getMonth()]}` :\n            `${inicio.getDate()}${inicio.getMonth() != fin.getMonth() ? ` ${this.MESES[inicio.getMonth()]}` : \"\"} - ${fin.getDate()} ${this.MESES[fin.getMonth()]}`;\n    }\n    /**\n     * Genera un objeto Date a partir de una fecha MySQL.\n     * La fecha MySQL debe estar en formato YYYY-MM-DD HH:mm:SS o YYYY-MM-DD.\n     * @param mysql Cadena con la fecha MySQL.\n     */\n    static generarDateDesdeMySQL(mysql) {\n        const dateParts = mysql.split(/[- :]/).map((part) => { return parseInt(part); });\n        return new Date(Date.UTC(dateParts[0], dateParts[1] - 1, dateParts[2], dateParts[3] || 0, dateParts[4] || 0, dateParts[5] || 0));\n    }\n    /**\n     * Devuelve una fecha MySQL como UTC.\n     * Ignora la zona horaria de la fecha de entrada y asigna la zona UTC a ese mismo instante.\n     * @param mysql Fecha mysql\n     */\n    static ignoraTZ(mysql) {\n        return new Date(Date.UTC(mysql.getFullYear(), mysql.getMonth(), mysql.getDate(), mysql.getHours(), mysql.getMinutes(), mysql.getSeconds(), mysql.getMilliseconds()));\n    }\n    static generarLog() {\n        return `[${this.generarFechaHoraNatural(new Date(), false)}]`;\n    }\n    /**\n     * Devuelve la diferencia entre dos fechas en unidades de tiempo.\n     * Indica la unidad de tiempo y la cantidad de unidades de dicha unidad.\n     * @param ms Milisegundos de diferencia.\n     */\n    static determineDiffTime(ms) {\n        const result = {\n            time: ms,\n            unit: TTimeUnit.MILLISECOND\n        };\n        if (ms > 86400000) {\n            result.time = parseFloat((ms / 86400000).toFixed(2));\n            result.unit = TTimeUnit.DAY;\n        }\n        else if (ms > 3600000) {\n            result.time = parseFloat((ms / 3600000).toFixed(2));\n            result.unit = TTimeUnit.HOUR;\n        }\n        else if (ms > 60000) {\n            result.time = parseFloat((ms / 60000).toFixed(2));\n            result.unit = TTimeUnit.MINUTE;\n        }\n        else if (ms > 1000) {\n            result.time = parseFloat((ms / 1000).toFixed(2));\n            result.unit = TTimeUnit.SECOND;\n        }\n        return result;\n    }\n    static getDate(timeZone) {\n        // Convertir a una zona horaria específica\n        return new Date(new Date().toLocaleString('en-US', { timeZone }));\n    }\n}\n","import { Fecha } from \"../../../../modules/utiles/fecha\";\nimport { Colors } from \"./colors\";\nexport class Log {\n    /* STATIC */\n    static label_base = `${Colors.colorize([Colors.FgYellow, Colors.Underscore], \"ENTORNO\")} `;\n    static label_compilar = `${Colors.colorize([Colors.FgGreen, Colors.Underscore], \"GENERAR\")} `;\n    static label_ejecutar = `${Colors.colorize([Colors.FgCyan, Colors.Underscore], \"EJECUTAR\")}`;\n    static generarFechaLog(cfg) {\n        return `[${Fecha.generarHora(new Date(), false)}][${cfg.type}][${cfg.label}]`;\n    }\n    static info(cfg, ...txt) {\n        if (txt.length > 0) {\n            console.info(this.generarFechaLog(cfg), ...txt);\n        }\n    }\n    static error(cfg, ...txt) {\n        if (txt.length > 0) {\n            console.error(this.generarFechaLog(cfg), ...txt);\n        }\n    }\n}\n","import { watch } from \"node:fs\";\nimport os from \"node:os\";\nexport class Workspace {\n    /* STATIC */\n    /* INSTANCE */\n    nombre;\n    root;\n    dir;\n    hijos;\n    iniciado;\n    watcher;\n    constructor(data) {\n        this.nombre = data.nombre;\n        this.root = data.root;\n        this.dir = data.path != undefined ? `${data.root}/${data.path}/${data.nombre}` : `${data.root}/${data.nombre}`;\n        this.hijos = [];\n        this.iniciado = false;\n    }\n    addHijo(ws) {\n        this.hijos.push(ws);\n    }\n    async init() {\n        if (this.iniciado) {\n            return;\n        }\n        this.iniciado = true;\n        await this.run();\n        this.initWatcher();\n    }\n    parar() {\n        this.watcher?.close();\n    }\n    initWatcher() {\n        this.parar();\n        if (os.platform() != \"linux\") {\n            this.watcher = watch(this.dir, { recursive: true }, (ev, filename) => {\n                if (filename?.endsWith(\"~\")) {\n                    return;\n                }\n                this.cambio();\n            });\n        }\n    }\n    cambio() {\n        for (const actual of this.hijos) {\n            actual.cambio();\n        }\n    }\n    async run() {\n    }\n}\n","import { spawn } from \"node:child_process\";\nimport { watch } from \"node:fs\";\nimport os from \"node:os\";\nimport treeKill from \"tree-kill\";\nimport { Colors } from \"../colors\";\nimport { Workspace } from \"../workspace\";\nimport { readJSON } from \"../../../../../modules/utiles/fs\";\nimport { Log } from \"../log\";\nexport var ERuntime;\n(function (ERuntime) {\n    ERuntime[\"node\"] = \"node\";\n    ERuntime[\"browser\"] = \"browser\";\n    ERuntime[\"cfworker\"] = \"cfworker\";\n    ERuntime[\"php\"] = \"php\";\n})(ERuntime || (ERuntime = {}));\nexport var EFramework;\n(function (EFramework) {\n    EFramework[\"meteored\"] = \"meteored\";\n    EFramework[\"nextjs\"] = \"nextjs\";\n    // astro = \"astro\",\n})(EFramework || (EFramework = {}));\nexport class Service extends Workspace {\n    /* STATIC */\n    static TIMEOUT = 300000;\n    static COMPILABLES = [ERuntime.node, ERuntime.browser, ERuntime.cfworker];\n    static PAUSABLES = [EFramework.meteored];\n    /* INSTANCE */\n    compilar;\n    ejecutar;\n    label;\n    global_compilar;\n    global_ejecutar;\n    config;\n    compilador;\n    ejecucion;\n    timeout;\n    constructor(data) {\n        super(data);\n        const nombre = data.nombre.padEnd(data.pad);\n        const color = Colors.nextColor();\n        this.compilar = data.compilar || data.forzar;\n        this.ejecutar = data.ejecutar;\n        this.label = Colors.colorize(color, nombre);\n        this.global_compilar = !data.global.packd.disabled.includes(this.nombre);\n        this.global_ejecutar = !data.global.devel.disabled.includes(this.nombre);\n        this.config = readJSON(`${this.dir}/package.json`).then(paquete => paquete.config ?? {});\n    }\n    initWatcher() {\n        this.watcher?.close();\n        if (os.platform() != \"linux\") {\n            this.watcher = watch(this.dir, { recursive: true }, (ev, filename) => {\n                if (filename?.endsWith(\"~\")) {\n                    return;\n                }\n                if (filename == \"package.json\") {\n                    this.updatePackageFile();\n                }\n                this.cambio();\n            });\n        }\n        else {\n            this.watcher = watch(`${this.dir}/package.json`, () => {\n                this.updatePackageFile();\n            });\n        }\n    }\n    // private stopWatcher(): void {\n    //     this.watcher?.close();\n    //     this.watcher = watch(`${this.dir}/package.json`, ()=>{\n    //         this.updatePackageFile();\n    //     });\n    // }\n    cambio() {\n        this.runCompilar().then(() => {\n        }).catch((err) => {\n            Log.error({\n                type: Log.label_base,\n                label: this.label,\n            }, \"Error reiniciando el compilador\", err);\n        });\n        for (const actual of this.hijos) {\n            actual.cambio();\n        }\n    }\n    setTimeoutCompilador() {\n        if (os.platform() == \"linux\") {\n            return;\n        }\n        if (this.timeout != undefined) {\n            clearTimeout(this.timeout);\n        }\n        this.timeout = setTimeout(() => {\n            this.stopCompilar().then(() => {\n            }).catch((err) => {\n                Log.error({\n                    type: Log.label_base,\n                    label: this.label,\n                }, \"Error pausando el compilador\", err);\n            });\n        }, Service.TIMEOUT);\n    }\n    updatePackageFile() {\n        this.config = readJSON(`${this.dir}/package.json`).then(paquete => paquete.config ?? {});\n        this.run().then(() => {\n        }).catch((err) => {\n            Log.error({\n                type: Log.label_base,\n                label: this.label,\n            }, \"Error aplicando configuración específica\", err);\n        });\n    }\n    updateGlobal(global) {\n        this.global_compilar = !global.packd.disabled.includes(this.nombre);\n        this.global_ejecutar = !global.devel.disabled.includes(this.nombre);\n        this.run().then(() => { }).catch((err) => {\n            Log.error({\n                type: Log.label_base,\n                label: this.label,\n            }, \"Error aplicando configuración global\", err);\n        });\n    }\n    async run() {\n        await super.run();\n        await Promise.all([\n            this.runCompilar(),\n            this.runEjecutar(),\n        ]);\n    }\n    async runCompilar() {\n        const compilar = await this.checkCompilar();\n        if (compilar) {\n            await this.initCompilar();\n        }\n        else {\n            await this.stopCompilar();\n        }\n    }\n    async runEjecutar() {\n        const ejecutar = await this.checkEjecucion();\n        if (ejecutar) {\n            await this.initEjecutar();\n        }\n        else {\n            await this.stopEjecutar();\n        }\n    }\n    async checkCompilar() {\n        if (!this.compilar) {\n            return false;\n        }\n        if (!this.global_compilar) {\n            // if (this.compilador==undefined) {\n            //     Log.info({\n            //         type: Log.label_compilar,\n            //         label: this.label,\n            //     }, `Omitiendo workspace \"${this.nombre}\" (global)`);\n            // }\n            return false;\n        }\n        const config = await this.config;\n        if (!config.generar) {\n            if (this.compilador == undefined) {\n                Log.info({\n                    type: Log.label_compilar,\n                    label: this.label,\n                }, `Omitiendo workspace \"${this.nombre}\"`);\n            }\n            return false;\n        }\n        return true;\n    }\n    async initCompilar() {\n        const config = await this.config;\n        if (!Service.COMPILABLES.includes(config.runtime)) {\n            return;\n        }\n        if (Service.PAUSABLES.includes(config.framework)) {\n            this.setTimeoutCompilador();\n        }\n        if (this.compilador != undefined) {\n            return;\n        }\n        let comando;\n        switch (config.framework) {\n            // case EFramework.astro:\n            case EFramework.nextjs:\n                comando = \"dev\";\n                break;\n            case EFramework.meteored:\n            default:\n                comando = \"packd\";\n        }\n        Log.info({\n            type: Log.label_compilar,\n            label: this.label,\n        }, `Iniciando compilador`);\n        this.compilador = spawn(\"yarn\", [\"run\", this.nombre, \"run\", comando], {\n            cwd: this.root,\n            env: { ...process.env, FORCE_COLOR: \"1\" },\n            stdio: \"pipe\",\n            shell: true,\n        });\n        this.compilador.stdout.on(\"data\", (data) => {\n            const lineas = data.toString().split(\"\\n\").map(linea => linea.trim()).filter(linea => linea.length > 0);\n            for (const linea of lineas) {\n                Log.info({\n                    type: Log.label_compilar,\n                    label: this.label,\n                }, linea);\n            }\n        });\n        this.compilador.stderr.on(\"data\", (data) => {\n            const lineas = data.toString().split(\"\\n\").map(linea => linea.trim()).filter(linea => linea.length > 0);\n            for (const linea of lineas) {\n                Log.error({\n                    type: Log.label_compilar,\n                    label: this.label,\n                }, linea);\n            }\n        });\n        this.compilador.on(\"error\", (error) => {\n            Log.error({\n                type: Log.label_compilar,\n                label: this.label,\n            }, Colors.colorize([Colors.FgRed, Colors.Bright], \"Error de compilador\"), error);\n        });\n        // this.compilador.on(\"close\", ()=>{\n        //     console.log(\"Terminado\")\n        // });\n    }\n    async stopCompilar() {\n        return new Promise((resolve, reject) => {\n            if (this.compilador == undefined) {\n                resolve();\n                return;\n            }\n            Log.info({\n                type: Log.label_compilar,\n                label: this.label,\n            }, `Deteniendo compilador (`, this.compilador.pid, \")\");\n            if (this.compilador.pid == undefined) {\n                resolve();\n                return;\n            }\n            treeKill(this.compilador.pid, (err) => {\n                if (err) {\n                    Log.error({\n                        type: Log.label_compilar,\n                        label: this.label,\n                    }, `Deteniendo compilador => KO`, err);\n                    reject(err);\n                }\n                else {\n                    Log.info({\n                        type: Log.label_compilar,\n                        label: this.label,\n                    }, `Deteniendo compilador => OK`);\n                    this.compilador = undefined;\n                    resolve();\n                }\n            });\n        });\n    }\n    async checkEjecucion() {\n        const config = await this.config;\n        if (!this.ejecutar || [ERuntime.browser, ERuntime.cfworker].includes(config.runtime) || [/*EFramework.astro,*/ EFramework.nextjs].includes(config.framework)) {\n            return false;\n        }\n        if (!this.global_ejecutar) {\n            // if (this.ejecucion==undefined) {\n            //     Log.info({\n            //         type: Log.label_ejecutar,\n            //         label: this.label,\n            //     }, `Omitiendo workspace \"${this.nombre}\" (global)`);\n            // }\n            return false;\n        }\n        if (!config.devel) {\n            if (this.ejecucion == undefined) {\n                Log.info({\n                    type: Log.label_ejecutar,\n                    label: this.label,\n                }, `Omitiendo workspace \"${this.nombre}\"`);\n            }\n            return false;\n        }\n        return true;\n    }\n    async initEjecutar() {\n        if (this.ejecucion != undefined) {\n            return;\n        }\n        Log.info({\n            type: Log.label_ejecutar,\n            label: this.label,\n        }, `Iniciando ejecución`);\n        const config = await this.config;\n        this.ejecucion = spawn(\"yarn\", [\"run\", this.nombre, \"run\", \"devel\"], {\n            cwd: this.root,\n            env: { ...process.env, FORCE_COLOR: \"1\" },\n            stdio: \"pipe\",\n            shell: true,\n        });\n        this.ejecucion.stdout.on(\"data\", (data) => {\n            const lineas = data.toString().split(\"\\n\").filter(linea => linea.length > 0);\n            for (const linea of lineas) {\n                Log.info({\n                    type: Log.label_ejecutar,\n                    label: this.label,\n                }, linea);\n            }\n        });\n        this.ejecucion.stderr.on(\"data\", (data) => {\n            const lineas = data.toString().split(\"\\n\").filter(linea => linea.length > 0);\n            for (const linea of lineas) {\n                Log.error({\n                    type: Log.label_ejecutar,\n                    label: this.label,\n                }, linea);\n            }\n        });\n        this.ejecucion.on(\"error\", (error) => {\n            Log.error({\n                type: Log.label_ejecutar,\n                label: this.label,\n            }, Colors.colorize([Colors.FgRed, Colors.Bright], \"Error de ejecución\"), error);\n        });\n        this.ejecucion.on(\"close\", (status) => {\n            status = status ?? 0;\n            if (status != 0) {\n                Log.error({\n                    type: Log.label_ejecutar,\n                    label: this.label,\n                }, `Terminado (`, status, `) Programando nueva ejecución en 30 segundos`);\n                setTimeout(() => {\n                    this.runEjecutar().then(() => {\n                    }).catch((err) => {\n                        Log.error({\n                            type: Log.label_ejecutar,\n                            label: this.label,\n                        }, \"Error en reinicio\", err);\n                    });\n                }, 30000);\n            }\n            else {\n                if (config.cronjob) {\n                    Log.info({\n                        type: Log.label_ejecutar,\n                        label: this.label,\n                    }, `Terminado: Programando nueva ejecución en 10 minutos`);\n                    this.ejecucion = undefined;\n                    setTimeout(() => {\n                        this.runEjecutar().then(() => {\n                        }).catch((err) => {\n                            Log.error({\n                                type: Log.label_ejecutar,\n                                label: this.label,\n                            }, \"Error en inicio programado\", err);\n                        });\n                    }, 600000);\n                }\n            }\n        });\n    }\n    async stopEjecutar() {\n        return new Promise((resolve, reject) => {\n            if (this.ejecucion == undefined) {\n                resolve();\n                return;\n            }\n            Log.info({\n                type: Log.label_ejecutar,\n                label: this.label,\n            }, `Deteniendo ejecución (`, this.ejecucion.pid, \")\");\n            if (this.ejecucion.pid == undefined) {\n                resolve();\n                return;\n            }\n            treeKill(this.ejecucion.pid, (err) => {\n                if (err) {\n                    Log.error({\n                        type: Log.label_ejecutar,\n                        label: this.label,\n                    }, `Deteniendo ejecución => KO`, err);\n                    reject(err);\n                }\n                else {\n                    Log.info({\n                        type: Log.label_ejecutar,\n                        label: this.label,\n                    }, `Deteniendo ejecución => OK`);\n                    this.ejecucion = undefined;\n                    resolve();\n                }\n            });\n        });\n    }\n}\n"],"names":["childProcess","spawn","exec","killAll","tree","signal","callback","killed","Object","keys","forEach","pid","pidpid","killPid","err","process","kill","parseInt","code","buildProcessTree","parentPid","pidsToProcess","spawnChildProcessesList","cb","ps","allData","stdout","on","data","toString","match","push","length","module","exports","undefined","Number","isNaN","Error","platform","TTimeUnit","Fecha","static","generarFechaMySQL","date","getUTCFullYear","getUTCMonth","slice","getUTCDate","join","generarFechaElastic","options","campos","anno","mes","dia","generarFechaNatural","generarFechaNaturalConDiaSemana","SEMANA","getUTCDay","generarFechaBloque","generarHora","tz","getUTCHours","getUTCMinutes","getUTCSeconds","generarHoraMinuto","generarMarcaMinuto","generarMarcaMes","Date","generarVersion","generarFechaHoraMySQL","generarFechaHoraNatural","generarFechaHoraNaturalConDiaSemana","generarIntervaloFechasNatural","inicio","fin","getDate","getMonth","getFullYear","this","MESES","generarDateDesdeMySQL","mysql","dateParts","split","map","part","UTC","ignoraTZ","getHours","getMinutes","getSeconds","getMilliseconds","generarLog","determineDiffTime","ms","result","time","unit","MILLISECOND","parseFloat","toFixed","DAY","HOUR","MINUTE","SECOND","timeZone","toLocaleString","Log","colorize","FgYellow","Underscore","FgGreen","FgCyan","generarFechaLog","cfg","type","label","info","txt","console","error","Workspace","nombre","root","dir","hijos","iniciado","watcher","constructor","path","addHijo","ws","init","run","initWatcher","parar","close","watch","recursive","ev","filename","endsWith","cambio","actual","ERuntime","EFramework","Service","node","browser","cfworker","meteored","compilar","ejecutar","global_compilar","global_ejecutar","config","compilador","ejecucion","timeout","super","padEnd","pad","color","nextColor","forzar","global","packd","disabled","includes","devel","then","paquete","updatePackageFile","runCompilar","catch","label_base","setTimeoutCompilador","clearTimeout","setTimeout","stopCompilar","TIMEOUT","updateGlobal","Promise","all","runEjecutar","checkCompilar","initCompilar","checkEjecucion","initEjecutar","stopEjecutar","generar","label_compilar","COMPILABLES","runtime","PAUSABLES","framework","comando","nextjs","cwd","env","FORCE_COLOR","stdio","shell","lineas","linea","trim","filter","stderr","FgRed","Bright","resolve","reject","label_ejecutar","status","cronjob"],"sourceRoot":""}
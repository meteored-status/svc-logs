{"version":3,"file":"plugins/mrpack/devel.js","mappings":"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","sources":["webpack://services-comun/./tools/src/mrpack/clases/workspace/compilar.ts","webpack://services-comun/./tools/src/mrpack/clases/deploy.ts","webpack://services-comun/./tools/src/mrpack/clases/workspace/i18n.ts","webpack://services-comun/./tools/src/mrpack/clases/devel.ts"],"sourcesContent":["import { Comando } from \"../comando\";\nimport { EFramework, ERuntime } from \"./service\";\nimport { isDir, isFile, md5Dir, mkdir, readFileString, readJSON, safeWrite, unlink, } from \"../../../../../modules/utiles/fs\";\nimport { md5 } from \"../../../../../modules/utiles/hash\";\nexport class Compilar {\n    basedir;\n    name;\n    packagejson;\n    fecha;\n    /* STATIC */\n    static async build(basedir, name, fecha) {\n        const dir = `${basedir}/services/${name}`;\n        if (!await isDir(dir) || !await isFile(`${dir}/package.json`)) {\n            console.error(name, \"[ERROR]\", \"Servicio no válido\");\n            return null;\n        }\n        const json = await readJSON(`${dir}/package.json`);\n        return new this(basedir, name, json, fecha);\n    }\n    static async md5Deps(basedir) {\n        const dir = `${basedir}/.yarn/cache`;\n        if (!await isDir(dir)) {\n            return;\n        }\n        const file = `${dir}/.md5`;\n        if (await isFile(file)) {\n            await unlink(file);\n        }\n        await safeWrite(file, `${await md5Dir(dir)}\\n`, true);\n    }\n    /* INSTANCE */\n    dependiente;\n    config;\n    dependencias;\n    pendientes;\n    dir;\n    constructor(basedir, name, packagejson, fecha) {\n        this.basedir = basedir;\n        this.name = name;\n        this.packagejson = packagejson;\n        this.fecha = fecha;\n        this.config = packagejson.config;\n        this.dependencias = [];\n        this.pendientes = {};\n        this.dir = `${basedir}/services/${name}`;\n        for (const dep of this.config.deps) {\n            this.pendientes[dep] = null;\n        }\n        this.dependiente = this.config.deps.length > 0;\n    }\n    async guardar() {\n        await safeWrite(`${this.dir}/package.json`, `${JSON.stringify(this.packagejson, null, 2)}\\n`, true, true);\n    }\n    checkDependencias(dependencias) {\n        for (const actual of dependencias) {\n            if (actual.config.deps.includes(this.name)) {\n                this.dependencias.push(actual);\n            }\n        }\n    }\n    async pack(env, compilar) {\n        if (compilar != undefined) {\n            delete this.pendientes[compilar.name];\n            const keys = Object.keys(this.pendientes);\n            if (keys.length > 0) {\n                console.log(this.name, \"[     ]\", \"Esperando dependencias:\", keys.join(\", \"));\n                return;\n            }\n        }\n        if (!this.config.generar || !this.config.deploy) {\n            if (this.dependencias.length == 0) {\n                console.log(this.name, \"[OK   ]\", \"Servicio desactivado para despliegue\");\n                return;\n            }\n            console.warn(this.name, \"[WARN ]\", \"Servicio desactivado para despliegue. Hay servicios dependientes que podrían no generarse correctamente:\", this.dependencias.map((dependencia) => dependencia.name).join(\", \"));\n            return Promise.all(this.dependencias.map((dependencia) => dependencia.pack(env, this))).then(() => { });\n        }\n        await this.prepararCredenciales();\n        switch (this.config.framework) {\n            case EFramework.meteored:\n                await this.packMeteored(env);\n                break;\n            case EFramework.nextjs:\n                await this.packNextJS(env);\n                break;\n        }\n        console.log(this.name, \"[OK   ]\", \"Servicio compilado\");\n        if (this.dependencias.length == 0) {\n            return;\n        }\n        return Promise.all(this.dependencias.map((dependencia) => dependencia.pack(env, this))).then(() => { });\n    }\n    async packMeteored(env) {\n        switch (this.config.runtime) {\n            case ERuntime.browser:\n                {\n                    await this.webpack(env);\n                    await this.checkVersionBrowser();\n                }\n                break;\n            case ERuntime.node:\n                {\n                    const customDockerfile = await isFile(`${this.dir}/Dockerfile`);\n                    await this.webpack(env);\n                    const checks = [\n                        `${this.basedir}/.yarnrc.yml`,\n                    ];\n                    if (customDockerfile) {\n                        checks.push(`${this.dir}/Dockerfile`);\n                    }\n                    switch (this.config.framework) {\n                        case EFramework.nextjs:\n                            checks.push(`${this.dir}/.next/BUILD_ID`);\n                            if (!customDockerfile) {\n                                checks.push(`${this.basedir}/framework/services-comun/despliegue/Dockerfile-next`);\n                            }\n                            break;\n                        case EFramework.meteored:\n                        default:\n                            checks.push(`${this.dir}/output`);\n                            if (!customDockerfile) {\n                                checks.push(`${this.basedir}/framework/services-comun/despliegue/Dockerfile`);\n                            }\n                            break;\n                    }\n                    checks.push(`${this.dir}/app.js`, `${this.dir}/assets`);\n                    await this.checkVersionService(env, checks);\n                }\n                break;\n            case ERuntime.php:\n                {\n                    await this.checkVersionService(env, [\n                        `${this.dir}/assets`,\n                        `${this.dir}/base/nginx/local.conf`,\n                        `${this.dir}/autoload.php`,\n                        `${this.dir}/composer.json`,\n                        `${this.dir}/composer.lock`,\n                        await isFile(`${this.dir}/Dockerfile`) ?\n                            `${this.dir}/Dockerfile` :\n                            `${this.basedir}/framework/services-comun/despliegue/Dockerfile-php`,\n                        `${this.dir}/Dockerfile`,\n                        `${this.dir}/index.php`,\n                        `${this.dir}/Meteored`,\n                        `${this.dir}/vendor`,\n                    ]);\n                }\n                break;\n        }\n    }\n    async webpack(env) {\n        const entorno = {\n            TS_NODE_PROJECT: \"webpack/tsconfig.json\",\n        };\n        const { status, stdout, stderr } = await Comando.spawn(\"yarn\", [\"workspace\", \"services-comun\", \"webpack\", \"--env\", `entorno=${env}`, \"--env\", `dir=\"${this.dir}\"`, \"--env\", `fecha=\"${this.fecha.toISOString()}\"`, \"--config\", `webpack/webpack.config.ts`], { cwd: this.basedir, env: entorno, colores: false });\n        if (status != 0) {\n            console.error(this.name, \"[KO   ]\", \"Error compilando:\");\n            console.error(stdout);\n            console.error(stderr);\n            return Promise.reject();\n        }\n    }\n    async packNextJS(env) {\n        const nodeEnv = env == \"test\" ? \"test\" : \"production\";\n        if (await isFile(`${this.dir}/.env.${nodeEnv}.local`)) {\n            await safeWrite(`${this.dir}/.env.local`, await readFileString(`${this.dir}/.env.${nodeEnv}.local`), true, true);\n        }\n        else if (!await isFile(`${this.dir}/.env.local`)) {\n            await safeWrite(`${this.dir}/.env.local`, `ENV=${env}`, true, true);\n        }\n        {\n            // todo falta añadir la fecha del commit (this.fecha)\n            const { status, stderr } = await Comando.spawn(\"yarn\", [\"run\", this.name, \"run\", \"next\", \"build\"], { cwd: this.basedir, env: { ZONA: nodeEnv }, colores: false });\n            if (status != 0) {\n                console.error(this.name, \"[KO   ]\", \"Error compilando:\");\n                console.error(stderr);\n                return Promise.reject();\n            }\n        }\n        await this.checkVersionService(env, [\n            `${this.basedir}/.yarnrc.yml`,\n            this.config.framework == EFramework.nextjs ?\n                `${this.dir}/.next/BUILD_ID` :\n                `${this.dir}/output`,\n            await isFile(`${this.dir}/Dockerfile`) ?\n                `${this.dir}/Dockerfile` :\n                `${this.basedir}/framework/services-comun/despliegue/Dockerfile-next`,\n            `${this.basedir}/framework/services-comun/next.config.js`,\n            `${this.basedir}/framework/services-comun/next.config.deps.js`,\n            `${this.dir}/next.config.js`,\n            `${this.dir}/public`,\n        ]);\n    }\n    async checkVersionService(env, checks) {\n        const tags = [];\n        if (await isFile(`${this.dir}/tags.json`)) {\n            let datos = await readJSON(`${this.dir}/tags.json`).catch(() => undefined);\n            if (Array.isArray(datos)) {\n                datos = datos[0];\n            }\n            if (datos?.tags != undefined && Array.isArray(datos.tags)) {\n                tags.push(...datos.tags.filter((actual) => ![\"latest\", \"produccion\", \"test\"].includes(actual)));\n            }\n        }\n        let fecha;\n        let index;\n        let anterior;\n        for (const actual of tags) {\n            const partes = /^(\\d{4}\\.\\d{2}\\.\\d{2})-(\\d{3,}).*$/.exec(actual);\n            if (partes == null) {\n                anterior = actual;\n            }\n            else {\n                fecha = partes[1];\n                index = partes[2];\n            }\n        }\n        for (const actual of this.config.deps) {\n            checks.push(`${this.basedir}/services/${actual}/hash.txt`);\n        }\n        const hashes = [\n            JSON.stringify(this.packagejson.dependencies ?? {}),\n        ];\n        if (this.config.imagen != undefined) {\n            hashes.push(this.config.imagen);\n        }\n        // if (this.config.deps.length>0) {\n        //     hashes.push(JSON.stringify(this.config.deps));\n        // }\n        //     \"runtime\": \"node\",\n        //     \"framework\": \"meteored\",\n        for (const actual of checks) {\n            hashes.push(await md5Dir(actual));\n        }\n        const hash = md5(hashes\n            .filter(actual => actual.length > 0)\n            .map(actual => md5(actual)).join(\"\")).substring(0, 8);\n        const md5Hash = `${hash}-${env}`;\n        if (fecha == undefined || index == undefined || anterior != md5Hash) {\n            const date = new Date();\n            const fechaActual = [\n                date.getUTCFullYear(),\n                `0${date.getUTCMonth() + 1}`.slice(-2),\n                `0${date.getUTCDate()}`.slice(-2),\n            ].join(\".\");\n            let indice;\n            if (fecha == fechaActual) {\n                indice = `00${parseInt(index ?? \"0\") + 1}`.slice(-3);\n            }\n            else {\n                indice = \"001\";\n            }\n            this.packagejson.version = `${fechaActual}-${indice}`;\n            await safeWrite(`${this.dir}/nuevo.txt`, \"1\", true, true);\n        }\n        else {\n            this.packagejson.version = `${fecha}-${index}`;\n        }\n        await safeWrite(`${this.dir}/version.txt`, `${this.packagejson.version}-${env}`, true, true);\n        await safeWrite(`${this.dir}/hash.txt`, md5Hash, true, true);\n        await this.guardar();\n    }\n    async checkVersionBrowser() {\n        const hash = await md5Dir(`${this.dir}/output`);\n        await safeWrite(`${this.dir}/output/hash.txt`, hash, true, true);\n        await safeWrite(`${this.dir}/hash.txt`, hash, true, true);\n    }\n    async prepararCredenciales() {\n        await mkdir(`${this.dir}/files/credenciales/`, true);\n        let mysql;\n        if (await isFile(`${this.basedir}/mysql.txt`)) {\n            mysql = `/root/${await readFileString(`${this.basedir}/mysql.txt`)}`;\n        }\n        for (const { source, target } of this.config.credenciales) {\n            if (await isFile(`${this.basedir}/kustomizar/tmp/credenciales/${source}`)) {\n                const data = await readFileString(`${this.basedir}/kustomizar/tmp/credenciales/${source}`);\n                await safeWrite(`${this.dir}/files/credenciales/${target}`, data);\n                if (mysql != undefined && target == \"mysql.json\") {\n                    const json = JSON.parse(data);\n                    if (json.master != undefined) {\n                        json.master.socketPath = mysql;\n                        if (json.slaves == undefined || !Array.isArray(json.slaves)) {\n                            json.slaves = [json.master];\n                        }\n                        else {\n                            for (const actual of json.slaves) {\n                                actual.socketPath = mysql;\n                            }\n                        }\n                    }\n                    else if (json.slaves != undefined && Array.isArray(json.slaves)) {\n                        for (const actual of json.slaves) {\n                            actual.socketPath = mysql;\n                        }\n                    }\n                    if (json.socketPath != undefined) {\n                        json.socketPath = mysql;\n                    }\n                    await safeWrite(`${this.dir}/files/credenciales/${target}`, JSON.stringify(json));\n                }\n            }\n        }\n    }\n}\n","import { Comando } from \"./comando\";\nimport { Compilar } from \"./workspace/compilar\";\nimport { PromiseDelayed } from \"../../../../modules/utiles/promise\";\nimport { isDir, isFile, readDir, readFileString } from \"../../../../modules/utiles/fs\";\nexport class Deploy {\n    /* STATIC */\n    static run(basedir, env) {\n        PromiseDelayed()\n            .then(async () => {\n            const services = await readDir(`${basedir}/services/`);\n            const fecha = await this.fechaCommit(basedir);\n            const compilaciones = await Promise.all(services.map((service) => Compilar.build(basedir, service, fecha)));\n            const compilaciones_validas = compilaciones.filter((compilacion) => compilacion != null);\n            compilaciones_validas.forEach((compilacion) => {\n                compilacion.checkDependencias(compilaciones_validas);\n            });\n            if (await isDir(`${basedir}/i18n`)) {\n                const { status, stdout, stderr } = await Comando.spawn(\"yarn\", [\"workspace\", \"i18n\", \"run\", \"generate\"]);\n                if (status != 0) {\n                    console.error(\"i18n\", \"[KO   ]\", \"Error compilando:\");\n                    console.error(stdout);\n                    console.error(stderr);\n                    return Promise.reject();\n                }\n                console.log(\"i18n\", \"[OK   ]\", \"Traducciones generadas\");\n            }\n            // eliminamos las compilaciones dependientes de otras compilaciones (serán iniciadas por las propias dependencias)\n            await Promise.all([\n                Compilar.md5Deps(basedir),\n                ...compilaciones_validas.filter(service => !service.dependiente).map((service) => service.pack(env)),\n            ]);\n        })\n            .catch((error) => {\n            if (error != undefined) {\n                console.error(error);\n            }\n            process.exit(1);\n        });\n    }\n    static async fechaCommit(basedir) {\n        if (await isFile(`${basedir}/last_commit.txt`)) {\n            const fecha = await readFileString(`${basedir}/last_commit.txt`);\n            return new Date(fecha.trim());\n        }\n        return new Date(0);\n    }\n}\n","import { spawn } from \"node:child_process\";\nimport { watch } from \"node:fs\";\nimport os from \"node:os\";\nimport treeKill from \"tree-kill\";\nimport { Colors } from \"../colors\";\nimport { Workspace } from \"../workspace\";\nimport { Log } from \"../log\";\nexport class I18N extends Workspace {\n    /* STATIC */\n    static TIMEOUT = 300000;\n    /* INSTANCE */\n    compilar;\n    label;\n    compilador;\n    timeout;\n    constructor(data) {\n        super(data);\n        const nombre = data.nombre.padEnd(data.pad);\n        const color = Colors.nextColor();\n        this.compilar = data.global.i18n;\n        this.label = Colors.colorize(color, nombre);\n    }\n    initWatcher() {\n        this.watcher?.close();\n        if (os.platform() != \"linux\") {\n            this.watcher = watch(`${this.dir}/.json/`, { recursive: true }, (_, filename) => {\n                if (filename?.endsWith(\"~\")) {\n                    return;\n                }\n                this.cambio();\n            });\n        }\n    }\n    // private stopWatcher(): void {\n    //     this.watcher?.close();\n    //     this.watcher = watch(`${this.dir}/package.json`, ()=>{\n    //         this.updatePackageFile();\n    //     });\n    // }\n    cambio() {\n        this.runCompilar().then(() => {\n        }).catch((err) => {\n            Log.error({\n                type: Log.label_base,\n                label: this.label,\n            }, \"Error reiniciando el compilador\", err);\n        });\n        for (const actual of this.hijos) {\n            actual.cambio();\n        }\n    }\n    setTimeoutCompilador() {\n        if (os.platform() == \"linux\") {\n            return;\n        }\n        if (this.timeout != undefined) {\n            clearTimeout(this.timeout);\n        }\n        this.timeout = setTimeout(() => {\n            this.stopCompilar().then(() => {\n            }).catch((err) => {\n                Log.error({\n                    type: Log.label_base,\n                    label: this.label,\n                }, \"Error pausando el compilador\", err);\n            });\n        }, I18N.TIMEOUT);\n    }\n    updateGlobal(global) {\n        this.compilar = global.i18n;\n        this.run().then(() => { }).catch((err) => {\n            Log.error({\n                type: Log.label_base,\n                label: this.label,\n            }, \"Error aplicando configuración global\", err);\n        });\n    }\n    async run() {\n        await super.run();\n        await Promise.all([\n            this.runCompilar(),\n        ]);\n    }\n    async runCompilar() {\n        const compilar = await this.checkCompilar();\n        if (compilar) {\n            await this.initCompilar();\n        }\n        else {\n            await this.stopCompilar();\n        }\n    }\n    async checkCompilar() {\n        return this.compilar;\n        // if (!this.compilar) {\n        //     if (this.compilador==undefined) {\n        //         Log.info({\n        //             type: Log.label_compilar,\n        //             label: this.label,\n        //         }, `Omitiendo workspace \"${this.nombre}\" (global)`);\n        //     }\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n    async initCompilar() {\n        this.setTimeoutCompilador();\n        if (this.compilador != undefined) {\n            return;\n        }\n        Log.info({\n            type: Log.label_compilar,\n            label: this.label,\n        }, `Iniciando generación de idiomas`);\n        this.compilador = spawn(\"yarn\", [\"run\", \"i18n\", \"run\", \"generate\", \"--watch\"], {\n            cwd: this.root,\n            env: { ...process.env, FORCE_COLOR: \"1\" },\n            stdio: \"pipe\",\n            shell: true,\n        });\n        this.compilador.stdout.on(\"data\", (data) => {\n            const lineas = data.toString().split(\"\\n\").filter(linea => linea.length > 0);\n            for (const linea of lineas) {\n                Log.info({\n                    type: Log.label_compilar,\n                    label: this.label,\n                }, linea);\n            }\n        });\n        this.compilador.stderr.on(\"data\", (data) => {\n            const lineas = data.toString().split(\"\\n\").filter(linea => linea.length > 0);\n            for (const linea of lineas) {\n                Log.error({\n                    type: Log.label_compilar,\n                    label: this.label,\n                }, linea);\n            }\n        });\n        this.compilador.on(\"error\", (error) => {\n            Log.error({\n                type: Log.label_compilar,\n                label: this.label,\n            }, Colors.colorize([Colors.FgRed, Colors.Bright], \"Error de generación de idiomas\"), error);\n        });\n        // this.compilador.on(\"close\", ()=>{\n        //     console.log(\"Terminado\")\n        // });\n    }\n    async stopCompilar() {\n        return new Promise((resolve, reject) => {\n            if (this.compilador == undefined) {\n                resolve();\n                return;\n            }\n            Log.info({\n                type: Log.label_compilar,\n                label: this.label,\n            }, `Deteniendo generación de idiomas (`, this.compilador.pid, \")\");\n            if (this.compilador.pid == undefined) {\n                resolve();\n                return;\n            }\n            treeKill(this.compilador.pid, (err) => {\n                if (err) {\n                    Log.error({\n                        type: Log.label_compilar,\n                        label: this.label,\n                    }, `Deteniendo generación de idiomas => KO`, err);\n                    reject(err);\n                }\n                else {\n                    Log.info({\n                        type: Log.label_compilar,\n                        label: this.label,\n                    }, `Deteniendo generación de idiomas => OK`);\n                    this.compilador = undefined;\n                    resolve();\n                }\n            });\n        });\n    }\n}\n","import { watch } from \"node:fs\";\nimport { I18N } from \"./workspace/i18n\";\nimport { Service } from \"./workspace/service\";\nimport { Workspace } from \"./workspace\";\nimport { Yarn } from \"./yarn\";\nimport { PromiseDelayed } from \"../../../../modules/utiles/promise\";\nimport { isDir, readDir, readJSON } from \"../../../../modules/utiles/fs\";\nexport class Devel {\n    /* STATIC */\n    static run(basedir, config) {\n        PromiseDelayed()\n            .then(async () => {\n            if (config.compilar) {\n                const { Init } = await import(/* webpackChunkName: \"mrpack/init\" */ \"./init\");\n                const { Framework } = await import(/* webpackChunkName: \"mrpack/framework\" */ \"./framework\");\n                const cambios = [\n                    await Init.init(basedir),\n                    await Framework.update(basedir),\n                ];\n                if (cambios.reduce((a, b) => a || b, false)) {\n                    await Yarn.install(basedir, { verbose: false });\n                }\n            }\n            await this.ejecutar(config, basedir);\n        })\n            .catch((err) => {\n            if (err != undefined) {\n                console.error(err);\n            }\n        });\n    }\n    static async ejecutar(ejecucion, basedir) {\n        const [framework, packages] = await Promise.all([\n            this.ejecutarWorkspaces(basedir, \"framework\"),\n            this.ejecutarWorkspaces(basedir, \"packages\"),\n        ]);\n        const existe = await this.ejecutarServices(ejecucion, basedir, [...framework, ...packages]);\n        if (!existe) {\n            for (const actual of [framework, packages].flat()) {\n                actual.parar();\n            }\n        }\n    }\n    static async ejecutarWorkspaces(basedir, path) {\n        if (!await isDir(`${basedir}/${path}`)) {\n            return [];\n        }\n        const workspaces_list = await readDir(`${basedir}/${path}`);\n        return Promise.all(workspaces_list.map(workspace => this.ejecutarWorkspace(basedir, path, workspace)));\n    }\n    static async ejecutarWorkspace(basedir, path, workspace) {\n        const devel = new Workspace({\n            nombre: workspace,\n            path,\n            root: basedir,\n        });\n        return devel.init().then(() => devel);\n    }\n    static async ejecutarServices(ejecucion, basedir, dependencias) {\n        const config_global = await readJSON(`${basedir}/config.workspaces.json`).catch(() => {\n            return {\n                devel: {\n                    available: [],\n                    disabled: [],\n                },\n                packd: {\n                    available: [],\n                    disabled: [],\n                },\n                i18n: true,\n                services: {},\n            };\n        });\n        if (!await isDir(`${basedir}/services`)) {\n            return false;\n        }\n        const workspaces_list = await readDir(`${basedir}/services`);\n        const length = workspaces_list.reduce((a, b) => Math.max(a, b.length), 0);\n        if (ejecucion.compilar && await isDir(`${basedir}/i18n`)) {\n            const i18n = new Workspace({\n                nombre: \"i18n\",\n                root: basedir,\n            });\n            await i18n.init();\n            dependencias.push(i18n);\n            await this.ejecutarI18N(ejecucion, basedir, length);\n        }\n        const workspaces = [];\n        for (const workspace of workspaces_list) {\n            const devel = new Service({\n                nombre: workspace,\n                path: \"services\",\n                root: basedir,\n                pad: length,\n                compilar: ejecucion.compilar,\n                ejecutar: ejecucion.ejecutar,\n                forzar: ejecucion.forzar,\n                global: config_global,\n            });\n            workspaces.push(devel.init().then(() => {\n                for (const dependencia of dependencias) {\n                    dependencia.addHijo(devel);\n                }\n                return devel;\n            }));\n        }\n        const services = await Promise.all(workspaces);\n        watch(`${basedir}/config.workspaces.json`, () => {\n            readJSON(`${basedir}/config.workspaces.json`)\n                .catch(() => {\n                return {\n                    devel: {\n                        available: [],\n                        disabled: [],\n                    },\n                    packd: {\n                        available: [],\n                        disabled: [],\n                    },\n                    i18n: true,\n                    services: {},\n                };\n            })\n                .then(async (config_global) => {\n                for (const actual of services) {\n                    actual.updateGlobal(config_global);\n                }\n            });\n        });\n        return true;\n    }\n    static async ejecutarI18N(ejecucion, basedir, length) {\n        const config_global = await readJSON(`${basedir}/config.workspaces.json`).catch(() => {\n            return {\n                devel: {\n                    available: [],\n                    disabled: [],\n                },\n                packd: {\n                    available: [],\n                    disabled: [],\n                },\n                i18n: true,\n                services: {},\n            };\n        });\n        const i18n = new I18N({\n            nombre: \"i18n\",\n            root: basedir,\n            pad: length,\n            global: config_global,\n        });\n        await i18n.init();\n        watch(`${basedir}/config.workspaces.json`, () => {\n            readJSON(`${basedir}/config.workspaces.json`)\n                .catch(() => {\n                return {\n                    devel: {\n                        available: [],\n                        disabled: [],\n                    },\n                    packd: {\n                        available: [],\n                        disabled: [],\n                    },\n                    i18n: true,\n                    services: {},\n                };\n            })\n                .then(async (config_global) => {\n                i18n.updateGlobal(config_global);\n            });\n        });\n        return true;\n    }\n}\n"],"names":["Compilar","basedir","name","packagejson","fecha","build","dir","this","console","error","md5Deps","file","dependiente","config","dependencias","pendientes","constructor","dep","deps","length","guardar","JSON","stringify","checkDependencias","actual","includes","push","pack","env","compilar","undefined","keys","Object","log","join","generar","deploy","warn","map","dependencia","Promise","all","then","prepararCredenciales","framework","meteored","packMeteored","nextjs","packNextJS","runtime","browser","webpack","checkVersionBrowser","node","customDockerfile","checks","checkVersionService","php","status","stdout","stderr","spawn","toISOString","cwd","TS_NODE_PROJECT","colores","reject","nodeEnv","ZONA","tags","datos","catch","Array","isArray","filter","index","anterior","partes","exec","hashes","dependencies","imagen","md5Hash","substring","date","Date","fechaActual","getUTCFullYear","getUTCMonth","slice","getUTCDate","indice","parseInt","version","hash","mysql","source","target","credenciales","data","json","parse","master","socketPath","slaves","Deploy","run","async","services","fechaCommit","compilaciones","service","compilaciones_validas","compilacion","forEach","process","exit","trim","I18N","static","label","compilador","timeout","super","nombre","padEnd","pad","color","nextColor","global","i18n","colorize","initWatcher","watcher","close","watch","recursive","_","filename","endsWith","cambio","runCompilar","err","type","label_base","hijos","setTimeoutCompilador","clearTimeout","setTimeout","stopCompilar","TIMEOUT","updateGlobal","checkCompilar","initCompilar","info","label_compilar","root","FORCE_COLOR","stdio","shell","on","lineas","toString","split","linea","FgRed","Bright","resolve","pid","Devel","Init","Framework","init","update","reduce","a","b","install","verbose","ejecutar","ejecucion","packages","ejecutarWorkspaces","ejecutarServices","flat","parar","path","workspaces_list","workspace","ejecutarWorkspace","devel","config_global","available","disabled","packd","Math","max","ejecutarI18N","workspaces","forzar","addHijo"],"sourceRoot":""}
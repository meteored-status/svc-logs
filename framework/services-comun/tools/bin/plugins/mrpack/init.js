"use strict";exports.id=534,exports.ids=[534],exports.modules={495:(e,n,s)=>{s.d(n,{L:()=>i});const i=["ca","cs","da","de","en","es","eu","fi","fr","gl","hi","hu","it","nl","no","pl","pt","ro","ru","sk","sv","tr","de-DE","de-AT","en-US","en-GB","en-CA","es-ES","es-AR","es-MX","es-CL","es-BO","es-CR","es-DO","es-EC","es-HN","es-PA","es-PE","es-PY","es-UY","es-VE","fr-FR","it-IT","nl-NL","pt-PT","pt-BR","ru-RU"]},793:(e,n,s)=>{s.d(n,{Init:()=>m});var i=s(386),o=s(763),a=s(495),t=s(124),r=s(765),c=s(851),l=s(582);const d='\nprocess.env.ZONA ??= "desarrollo";\n\nSymbol.dispose ??= Symbol("Symbol.dispose");\nSymbol.asyncDispose ??= Symbol("Symbol.asyncDispose");\n\nrequire("./init");\nrequire("source-map-support").install();\nrequire("./output/app");\n'.trimStart(),p="\n.yarn/releases/*.*js binary\n.yarn/plugins/*.*js binary\n**/tools/bin/**/*.*js binary\n".trimStart(),u='\n// require("source-map-support").install();\nrequire("./app");\n'.trimStart(),g="\n.DS_Store\n.idea/copilot/\n.idea/dataSources.xml\n.idea/jetClient/state-backup-*.xml\n.idea/watcherTasks.xml\n.idea/php.xml\n.idea/sonarlint/\n.idea/workspace.xml\n.next/\n.pnp.*\n.wrangler/\n.yarn/*\n!.yarn/patches\n!.yarn/plugins\n!.yarn/releases\n!.yarn/sdks\n!.yarn/versions\n**/files/*\n**/output/*\n!**/output/.foreverignore\nconfig.workspaces.json\ni18n/.credenciales\ni18n/**/*.ts\nnode_modules/\nservices-*/files\nservices-*/output\ntmp/\ntsconfig.tsbuildinfo\nvendor/\n**/.env*.local\n".trimStart();class m{static async init(e){console.log(t.J.colorize([t.J.FgCyan,t.J.Bright],"Inicializando")),console.group();const[n,s]=await this.initBase(e);await this.deleteFiles(e);const i=this.reduceConfig([await this.initServices(e,n),await this.initScripts(e,s)]);await this.initConfig(e,n);const o=await this.initYarnRC(e,i);return console.groupEnd(),!(!o&&!i.cambio||(await l.R.install(e,{verbose:!1}),0))}static reduceConfig(e){return e.reduce(((e,n)=>({openTelemetry:e.openTelemetry||n.openTelemetry,cambio:e.cambio||n.cambio})),{openTelemetry:!1,cambio:!1})}static async isValid(e){return await(0,i.Q7)(e)&&await(0,i.fo)(`${e}/package.json`)}static async initBase(e){console.log(t.J.colorize([t.J.FgWhite],"Inicializando proyecto")),console.group();const n=[],s=[],o=await(0,i.TQ)(`${e}/package.json`);if(o.scripts={mrlang:"yarn workspace services-comun mrlang",mrpack:"yarn workspace services-comun mrpack",doctor:"yarn dlx @yarnpkg/doctor",devel:"yarn mrpack devel -e","devel-f":"yarn mrpack devel -e -f","g:devel":'cd "$INIT_CWD" && yarn node --watch --no-warnings devel.js',packd:"yarn mrpack devel -c","packd-f":"yarn mrpack devel -c -f","g:packd":'TS_NODE_PROJECT="webpack/tsconfig.json" yarn workspace services-comun webpack --env entorno=desarrollo --env dir="$INIT_CWD" --config "webpack/webpack.config.ts"',update:"yarn mrpack update"},await(0,i.Q7)(`${e}/framework`))for(const n of await(0,i.Ci)(`${e}/framework`))await this.isValid(`${e}/framework/${n}`)?o.scripts[n]=`yarn workspace ${n}`:await(0,i.y1)(`${e}/framework/${n}`);if(await(0,i.Q7)(`${e}/services`))for(const s of await(0,i.Ci)(`${e}/services`))await this.isValid(`${e}/services/${s}`)?(o.scripts[s]=`yarn workspace ${s}`,n.push(s)):await(0,i.y1)(`${e}/services/${s}`);if(await(0,i.Q7)(`${e}/packages`))for(const n of await(0,i.Ci)(`${e}/packages`))await this.isValid(`${e}/packages/${n}`)?o.scripts[n]=`yarn workspace ${n}`:await(0,i.y1)(`${e}/packages/${n}`);if(await(0,i.Q7)(`${e}/scripts`))for(const n of await(0,i.Ci)(`${e}/scripts`))await this.isValid(`${e}/scripts/${n}`)?(o.scripts[n]=`yarn workspace ${n}`,s.push(n)):await(0,i.y1)(`${e}/scripts/${n}`);return await(0,i.Q7)(`${e}/i18n`)&&(o.scripts.i18n="yarn workspace i18n"),o.workspaces=["framework/*","i18n","packages/*","scripts/*","services/*","statics/*"],null!=o.dependencies&&delete o.dependencies,null!=o.devDependencies&&delete o.devDependencies,await(0,i.TC)(`${e}/.gitattributes`,p,!0),await(0,i.TC)(`${e}/.gitignore`,g,!0),await(0,i.TC)(`${e}/.sonarcloud.properties`,"# Path to sources\nsonar.sources=./framework/**/*,./services/**/*,./packages/**/*,./static/**/*\nsonar.exclusions=./.yarn/**/*,./node_modules/**/*,./.run/*,./framework/**/.run,./deprecated/**/*,./mapping/*,./tmp/**/*,output/**/*,.next/**/*\n#sonar.inclusions=\n\n# Path to tests\n#sonar.tests=\n#sonar.test.exclusions=\n#sonar.test.inclusions=\n\n# Source encoding\n#sonar.sourceEncoding=UTF-8\n\n# Exclusions for copy-paste detection\n#sonar.cpd.exclusions=\n",!0),await(0,i.TC)(`${e}/package.json`,`${JSON.stringify(o,null,2)}\n`,!0),console.groupEnd(),[n,s]}static async migrarTraducciones(e){console.log(t.J.colorize([t.J.FgYellow],"Migrando traducciones"));const{status:n,stdout:s,stderr:o}=await r.O.spawn("yarn",["workspace","services-comun","mrlang","init"],{cwd:e});if(console.log(s),console.error(o),0!=n)return Promise.reject("Error al migrar traducciones");if(await(0,i.Q7)(`${e}/statics`))for(const n of await(0,i.Ci)(`${e}/statics`)){const s=`${e}/statics/${n}/json`;if(await(0,i.Q7)(s))for(const n of await(0,i.Ci)(s))await(0,i.Q7)(`${s}/${n}`)&&await(0,i.$w)(`${s}/${n}`,`${e}/i18n/.json/${n}`)}console.log(t.J.colorize([t.J.FgGreen],"Actualizando /i18n/package.json"));const c=await(0,i.TQ)(`${e}/i18n/package.json`).catch((()=>({config:{langs:a.L,modulos:{}}})));await this.parseModulosTraduccion(c.config.modulos,`${e}/i18n/.json`),await(0,i.TC)(`${e}/i18n/package.json`,`${JSON.stringify(c,null,2)}\n`,!0),console.log(t.J.colorize([t.J.FgGreen],"Borrando directorios antiguos")),await(0,i.Nr)(`${e}/statics`),await(0,i.Q7)(`${e}/framework/services-translation`)&&await(0,i.Nr)(`${e}/framework/services-translation`),await l.R.install(e,{optimize:!1})}static async parseModulosTraduccion(e,n,s){const o=await(0,i.Ci)(n);for(const a of o){if(!await(0,i.Q7)(`${n}/${a}`))continue;const o=s?`${s}.${a}`:a;let t,r;await(0,i.fo)(`${n}/${a}/include.json`)&&(t=await(0,i.TQ)(`${n}/${a}/include.json`),await(0,i.Nr)(`${n}/${a}/include.json`)),await(0,i.fo)(`${n}/${a}/exclude.json`)?(r=await(0,i.TQ)(`${n}/${a}/exclude.json`),await(0,i.Nr)(`${n}/${a}/exclude.json`)):r=[],e[o]={include:t,exclude:r},await this.parseModulosTraduccion(e,`${n}/${a}`,o)}}static async deleteFiles(e){console.log(t.J.colorize([t.J.FgWhite],"Revisando archivos innecesarios")),console.group();for(const n of["update.sh","run.sh"])await(0,i.fo)(`${e}/${n}`)&&(console.log(`Eliminando ${t.J.colorize([t.J.FgYellow],n)}`),await(0,i.y1)(`${e}/${n}`));for(const n of await(0,i.Ci)(`${e}/framework`))for(const s of["download.js","upload.js"])await(0,i.fo)(`${e}/framework/${n}/${s}`)&&(console.log(`Eliminando ${t.J.colorize([t.J.FgYellow],`${n}/${s}`)}`),await(0,i.y1)(`${e}/framework/${n}/${s}`));console.groupEnd()}static async initServices(e,n){console.log(t.J.colorize([t.J.FgWhite],"Inicializando servicios")),console.group();const s=this.reduceConfig(await Promise.all(n.map((n=>this.initService(e,n)))));return console.groupEnd(),s}static async initService(e,n){const s={openTelemetry:!1,cambio:!1},a=await(0,i.TQ)(`${e}/framework/${process.env.npm_package_name}/package.json`),r=await(0,i.TQ)(`${e}/services/${n}/package.json`),l=(0,o.F)(JSON.stringify(r));r.config??={},void 0!==r.config.nextjs&&"object"!=typeof r.config.nextjs&&(r.config.nextjs={});const p=r.config.nextjs??{},g=r.config.resources??r.resources??!1,m={};m.cronjob=r.config.cronjob??r.cronjob??!1,m.devel=r.config.devel??r.devel??!0,m.deploy=r.config.deploy??!0,m.generar=r.config.generar??r.generar??!1,m.unico=r.config.unico??r.unico??!1,m.deps=r.config.deps??[];const f=r.config.storage??r.storage;if(Array.isArray(f)?f.length>0&&(m.storage={buckets:f}):m.storage=r.config.storage,m.runtime=r.config.runtime??(g?c.uK.browser:c.uK.node),void 0!==r.config.framework?m.framework=r.config.framework:p.enabled?m.framework=c.U3.nextjs:m.framework=c.U3.meteored,m.kustomize=r.config.kustomize??"services",void 0!==r.config.credenciales?m.credenciales=r.config.credenciales:m.credenciales=p.credenciales??[],m.database=r.config.database,m.bundle=r.config.bundle??{},r.config=m,null!=r.nodemonConfig&&delete r.nodemonConfig,r.config.generar){switch(r.scripts??={},r.config.framework){case c.U3.meteored:switch(m.runtime){case c.uK.cfworker:r.scripts.packd="yarn tsc --noemit --watch",r.scripts.devel="wrangler dev --remote --env test";break;case c.uK.node:r.scripts.packd="yarn g:packd",r.config.cronjob?r.scripts.devel="yarn node --no-warnings devel.js":r.scripts.devel="yarn g:devel",r.version="0000.00.00-000";break;default:r.scripts.packd="yarn g:packd"}break;case c.U3.nextjs:r.scripts.dev??="yarn run next dev -- -p 8080"}if(m.runtime==c.uK.node&&(r.dependencies??={},r.devDependencies??={},null!=r.devDependencies.tslib?(r.dependencies.tslib=r.devDependencies.tslib,delete r.devDependencies.tslib):null==r.dependencies.tslib&&(r.dependencies.tslib="*"),m.framework!=c.U3.nextjs)){r.dependencies["source-map-support"]??=a.devDependencies["source-map-support"]??"*";for(const[e,n]of Object.entries(a.devDependencies))null!=r.dependencies[e]&&(r.dependencies[e]=n),null!=r.devDependencies[e]&&(r.devDependencies[e]=n);m.cronjob||(r.dependencies["@google-cloud/opentelemetry-cloud-trace-exporter"]??=a.devDependencies["@google-cloud/opentelemetry-cloud-trace-exporter"]??"*",r.dependencies["@opentelemetry/api"]??=a.devDependencies["@opentelemetry/api"]??"*",r.dependencies["@opentelemetry/core"]??=a.devDependencies["@opentelemetry/core"]??"*",r.dependencies["@opentelemetry/instrumentation"]??=a.devDependencies["@opentelemetry/instrumentation"]??"*",r.dependencies["@opentelemetry/instrumentation-http"]??=a.devDependencies["@opentelemetry/instrumentation-http"]??"*",r.dependencies["@opentelemetry/resources"]??=a.devDependencies["@opentelemetry/resources"]??"*",r.dependencies["@opentelemetry/sdk-trace-base"]??=a.devDependencies["@opentelemetry/sdk-trace-base"]??"*",r.dependencies["@opentelemetry/sdk-trace-node"]??=a.devDependencies["@opentelemetry/sdk-trace-node"]??"*",r.dependencies["@opentelemetry/semantic-conventions"]??=a.devDependencies["@opentelemetry/semantic-conventions"]??"*",r.dependencies.chokidar??=a.devDependencies.chokidar??"*",r.dependencies.hexoid??=a.devDependencies.hexoid??"*",r.devDependencies.formidable??=a.devDependencies.formidable??"*",void 0!==r.dependencies["@google-cloud/trace-agent"]&&delete r.dependencies["@google-cloud/trace-agent"],void 0!==r.dependencies["@opentelemetry/context-async-hooks"]&&delete r.dependencies["@opentelemetry/context-async-hooks"],void 0!==r.dependencies.formidable&&delete r.dependencies.formidable,s.openTelemetry=!0),void 0!==r.devDependencies["source-map-support"]&&delete r.devDependencies["source-map-support"],0==Object.keys(r.dependencies).length&&delete r.dependencies,0==Object.keys(r.devDependencies).length&&delete r.devDependencies}await(0,i.TC)(`${e}/services/${n}/package.json`,`${JSON.stringify(r,null,2)}\n`,!0)}return m.runtime==c.uK.node&&m.framework!=c.U3.nextjs&&await Promise.all([(0,i.TC)(`${e}/services/${n}/app.js`,d,!0),(0,i.TC)(`${e}/services/${n}/devel.js`,u,!0),(0,i.TC)(`${e}/services/${n}/init.js`,"",!1)]),await(0,i.fo)(`${e}/services/${n}/output/.foreverignore`)&&(console.log(t.J.colorize([t.J.FgYellow],`Eliminando ${e}/services/${n}/output/.foreverignore`)),await(0,i.y1)(`${e}/services/${n}/output/.foreverignore`)),await(0,i.fo)(`${e}/services/${n}/output/devel.js`)&&(console.log(t.J.colorize([t.J.FgYellow],`Eliminando ${e}/services/${n}/output/devel.js`)),await(0,i.y1)(`${e}/services/${n}/output/devel.js`)),await(0,i.fo)(`${e}/services/${n}/output/devel.js.map`)&&(console.log(t.J.colorize([t.J.FgYellow],`Eliminando ${e}/services/${n}/output/devel.js.map`)),await(0,i.y1)(`${e}/services/${n}/output/devel.js.map`)),await(0,i.fo)(`${e}/services/${n}/pack.js`)&&(console.log(t.J.colorize([t.J.FgYellow],`Eliminando ${e}/services/${n}/pack.js`)),await(0,i.y1)(`${e}/services/${n}/pack.js`)),s.cambio=l!=(0,o.F)(JSON.stringify(r)),s}static async initScripts(e,n){console.log(t.J.colorize([t.J.FgWhite],"Inicializando scripts")),console.group();const s=this.reduceConfig(await Promise.all(n.map((n=>this.initScript(e,n)))));return console.groupEnd(),s}static async initScript(e,n){const s=await(0,i.TQ)(`${e}/scripts/${n}/package.json`),a=(0,o.F)(JSON.stringify(s));return s.scripts??={},s.scripts.packd="yarn g:packd",await(0,i.TC)(`${e}/scripts/${n}/package.json`,`${JSON.stringify(s,null,2)}\n`,!0),{openTelemetry:!1,cambio:a!=(0,o.F)(JSON.stringify(s))}}static async initConfig(e,n){console.log(t.J.colorize([t.J.FgWhite],"Inicializando configuración de workspaces")),console.group();const s=`${e}/config.workspaces.json`,o={devel:{available:[],disabled:[]},packd:{available:[],disabled:[]},i18n:!0,services:{}};if(await(0,i.fo)(s))try{const e=await(0,i.TQ)(s);o.devel.disabled.push(...e?.devel?.disabled?.filter((e=>n.includes(e)))??[]),o.packd.disabled.push(...e?.packd?.disabled?.filter((e=>n.includes(e)))??[]),o.i18n=e.i18n??!0,o.services=e.services??{}}catch(e){}for(const e of n)o.devel.disabled.includes(e)||o.devel.available.push(e),o.packd.disabled.includes(e)||o.packd.available.push(e);function a(e,n){return e.localeCompare(n)}o.devel.available=o.devel.available.toSorted(a),o.devel.available.push(""),o.devel.disabled=o.devel.disabled.toSorted(a),o.devel.disabled.push(""),o.packd.available=o.packd.available.toSorted(a),o.packd.available.push(""),o.packd.disabled=o.packd.disabled.toSorted(a),o.packd.disabled.push(""),await(0,i.TC)(s,JSON.stringify(o,null,2),!0),console.groupEnd()}static async initYarnRC(e,n){console.log(t.J.colorize([t.J.FgWhite],"Inicializando configuración de YARN")),console.group();const s=(await(0,i.Cj)(`${e}/.yarnrc.yml`)).split("\n"),o=[];let a=[];const r=[];let c=0;for(const e of s)switch("packageExtensions:"==e?c=1:("plugins:"==e||e.startsWith("yarnPath:"))&&(c=2),c){case 0:o.push(e.trimEnd());break;case 1:a.push(e.trimEnd());break;case 2:r.push(e.trimEnd())}let l=!1;a=a.filter((e=>e.length>0)),0==a.length&&a.push("packageExtensions:");const d={},p=["mysql2@*:"];n.openTelemetry&&(d["@google-cloud/opentelemetry-cloud-trace-exporter"]="@opentelemetry/semantic-conventions",d["@google-cloud/opentelemetry-resource-util"]="@opentelemetry/api");for(const[e,n]of Object.entries(d))a.includes(`  "${e}@*":`)||(a.push(`  "${e}@*":`),a.push("    dependencies:"),a.push(`      "${n}": "*"`),l=!0);for(const e of p){const n=a.indexOf(`  ${e}@*:`);n>=0&&(a.splice(n,3),l=!0)}return a=a.filter((e=>e.length>0)),1==a.length&&(a=[],l=!0),l&&(a.length>0&&a.push(""),await(0,i.TC)(`${e}/.yarnrc.yml`,[...o,...a,...r].join("\n"),!0)),console.groupEnd(),l}}}};
//# sourceMappingURL=init.js.map
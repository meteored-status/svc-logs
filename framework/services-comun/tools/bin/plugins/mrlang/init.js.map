{"version":3,"file":"plugins/mrlang/init.js","mappings":"8FAAO,MAAMA,EAAa,CACtB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC9H,QAAS,QACT,QAAS,QAAS,QAClB,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QACrH,QACA,QACA,QACA,QAAS,QACT,Q,mECNG,MAAMC,EAET,gBAAaC,CAAIC,GACb,MAAMC,EAAO,GAAGD,SAChBE,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,yBACxC,QAAMJ,GAAM,GAClBC,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,uCACxC,QAAM,GAAGJ,mBAAsB,GACrCC,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,+BACxC,QAAM,GAAGJ,WAAc,GAC7BC,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,8BACxC,QAAM,GAAGJ,UAAa,GAC5BC,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,8CACxC,QAAU,GAAGJ,0BAA8B,0cAW7B,GACpBC,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,0CACxC,QAAU,GAAGJ,sBAA0B,gcAWzB,GACpBC,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,0CACxC,QAAU,GAAGJ,sBAA0B,2bAWzB,GACpBC,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,sCACxC,QAAU,GAAGJ,kBAAsBK,KAAKC,UAAU,CACpDC,QAAS,gCACV,KAAM,IAAI,GACbN,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,+BAC9C,MAAM,OAAEI,SAAiB,QAAS,GAAGR,kBAAqBS,OAAM,KAAM,CAAGD,OAAQ,CAAEE,KAAM,KAAMC,MAAO,IAAYC,QAAS,CAAC,OAiB5HC,eAAeC,EAAUC,GACrBd,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,iBAAiBW,mBAC/D,MAAMC,QAAa,QAAS,GAAGjB,KAAWgB,kBACdE,MAAxBD,EAAKE,gBACLF,EAAKE,gBAAkB,CACnBlB,KAAM,eAIVgB,EAAKE,gBAAgBlB,KAAO,oBAE1B,QAAU,GAAGD,KAAWgB,iBAAoB,GAAGV,KAAKC,UAAUU,EAAM,KAAM,QAAQ,EAC5F,CACA,SA7BM,QAAU,GAAGhB,iBAAqBK,KAAKC,UAAU,CACnDa,KAAM,OACNC,YAAa,4BACbC,QAAS,QACTC,OAAQ,uBACRC,QAAS,CACL,SAAY,gDACZ,KAAQ,4CACR,KAAQ,6CAEZL,gBAAiB,CACb,iBAAkB,cAClB,MAAS,UAEbV,UACD,KAAM,GAAK,MAAM,SAcV,QAAM,GAAGT,cACf,IAAK,MAAMgB,WAAa,QAAQ,GAAGhB,oBACzBe,EAAU,YAAYC,KAGpC,SAAU,QAAM,GAAGhB,cACf,IAAK,MAAMgB,WAAa,QAAQ,GAAGhB,oBACzBe,EAAU,YAAYC,KAGpCd,QAAQC,IAAI,IAAOC,SAAS,CAAC,IAAOC,SAAU,+BAC9C,MAAMoB,QAAgB,QAAS,GAAGzB,kBAClCyB,EAAQD,QAAQvB,KAAO,4BACjB,QAAU,GAAGD,iBAAwB,GAAGM,KAAKC,UAAUkB,EAAS,KAAM,QAAQ,EACxF,E","sources":["webpack://services-comun/./modules/net/i18n/index.ts","webpack://services-comun/./tools/src/mrlang/clases/init.ts"],"sourcesContent":["export const soportados = [\n    \"ca\", \"cs\", \"da\", \"de\", \"en\", \"es\", \"eu\", \"fi\", \"fr\", \"gl\", \"hi\", \"hu\", \"it\", \"nl\", \"no\", \"pl\", \"pt\", \"ro\", \"ru\", \"sk\", \"sv\", \"tr\",\n    \"de-DE\", \"de-AT\",\n    \"en-US\", \"en-GB\", \"en-CA\",\n    \"es-ES\", \"es-AR\", \"es-MX\", \"es-CL\", \"es-BO\", \"es-CR\", \"es-DO\", \"es-EC\", \"es-HN\", \"es-PA\", \"es-PE\", \"es-PY\", \"es-UY\", \"es-VE\",\n    \"fr-FR\",\n    \"it-IT\",\n    \"nl-NL\",\n    \"pt-PT\", \"pt-BR\",\n    \"ru-RU\",\n];\nexport const soportado = (lang) => soportados.indexOf(lang) >= 0;\n","import { isDir, mkdir, readDir, readJSON, safeWrite } from \"services-comun/modules/utiles/fs\";\nimport { soportados } from \"services-comun/modules/net/i18n\";\nimport { Colors } from \"../../mrpack/clases/colors\";\nexport class Init {\n    /* STATIC */\n    static async run(basedir) {\n        const i18n = `${basedir}/i18n`;\n        console.log(Colors.colorize([Colors.FgGreen], \"Creando /i18n/\"));\n        await mkdir(i18n, true);\n        console.log(Colors.colorize([Colors.FgGreen], \"Creando /i18n/.credenciales/\"));\n        await mkdir(`${i18n}/.credenciales`, true);\n        console.log(Colors.colorize([Colors.FgGreen], \"Creando /i18n/.json/\"));\n        await mkdir(`${i18n}/.json`, true);\n        console.log(Colors.colorize([Colors.FgGreen], \"Creando /i18n/.run/\"));\n        await mkdir(`${i18n}/.run`, true);\n        console.log(Colors.colorize([Colors.FgGreen], \"Creando /i18n/.run/generate.run.xml\"));\n        await safeWrite(`${i18n}/.run/generate.run.xml`, \"<component name=\\\"ProjectRunConfigurationManager\\\">\\n\" +\n            \"    <configuration default=\\\"false\\\" name=\\\"Generar traducciones (forzar)\\\" type=\\\"js.build_tools.npm\\\">\\n\" +\n            \"        <package-json value=\\\"$PROJECT_DIR$/i18n/package.json\\\" />\\n\" +\n            \"        <command value=\\\"run\\\" />\\n\" +\n            \"        <scripts>\\n\" +\n            \"            <script value=\\\"generate\\\" />\\n\" +\n            \"        </scripts>\\n\" +\n            \"        <node-interpreter value=\\\"project\\\" />\\n\" +\n            \"        <envs />\\n\" +\n            \"        <method v=\\\"2\\\" />\\n\" +\n            \"    </configuration>\\n\" +\n            \"</component>\", true);\n        console.log(Colors.colorize([Colors.FgGreen], \"Creando /i18n/.run/pull.run.xml\"));\n        await safeWrite(`${i18n}/.run/pull.run.xml`, \"<component name=\\\"ProjectRunConfigurationManager\\\">\\n\" +\n            \"    <configuration default=\\\"false\\\" name=\\\"Actualizar traducciones\\\" type=\\\"js.build_tools.npm\\\">\\n\" +\n            \"        <package-json value=\\\"$PROJECT_DIR$/i18n/package.json\\\" />\\n\" +\n            \"        <command value=\\\"run\\\" />\\n\" +\n            \"        <scripts>\\n\" +\n            \"            <script value=\\\"pull\\\" />\\n\" +\n            \"        </scripts>\\n\" +\n            \"        <node-interpreter value=\\\"project\\\" />\\n\" +\n            \"        <envs />\\n\" +\n            \"        <method v=\\\"2\\\" />\\n\" +\n            \"    </configuration>\\n\" +\n            \"</component>\", true);\n        console.log(Colors.colorize([Colors.FgGreen], \"Creando /i18n/.run/push.run.xml\"));\n        await safeWrite(`${i18n}/.run/push.run.xml`, \"<component name=\\\"ProjectRunConfigurationManager\\\">\\n\" +\n            \"    <configuration default=\\\"false\\\" name=\\\"Subir traducciones\\\" type=\\\"js.build_tools.npm\\\">\\n\" +\n            \"        <package-json value=\\\"$PROJECT_DIR$/i18n/package.json\\\" />\\n\" +\n            \"        <command value=\\\"run\\\" />\\n\" +\n            \"        <scripts>\\n\" +\n            \"            <script value=\\\"push\\\" />\\n\" +\n            \"        </scripts>\\n\" +\n            \"        <node-interpreter value=\\\"project\\\" />\\n\" +\n            \"        <envs />\\n\" +\n            \"        <method v=\\\"2\\\" />\\n\" +\n            \"    </configuration>\\n\" +\n            \"</component>\", true);\n        console.log(Colors.colorize([Colors.FgGreen], \"Creando /i18n/tsconfig.json\"));\n        await safeWrite(`${i18n}/tsconfig.json`, JSON.stringify({\n            extends: \"services-comun/tsconfig.json\",\n        }, null, 2), true);\n        console.log(Colors.colorize([Colors.FgGreen], \"Creando /i18n/package.json\"));\n        const { config } = await readJSON(`${i18n}/package.json`).catch(() => ({ config: { lang: \"en\", langs: soportados, modulos: {} } }));\n        await safeWrite(`${i18n}/package.json`, JSON.stringify({\n            name: \"i18n\",\n            description: \"Componentes de Traducción\",\n            version: \"1.0.0\",\n            author: \"José Antonio Jiménez\",\n            scripts: {\n                \"generate\": \"yarn workspace services-comun mrlang generate\",\n                \"pull\": \"yarn workspace services-comun mrlang pull\",\n                \"push\": \"yarn workspace services-comun mrlang push\",\n            },\n            devDependencies: {\n                \"services-comun\": \"workspace:*\",\n                \"tslib\": \"^2.7.0\",\n            },\n            config,\n        }, null, 2) + \"\\n\", true);\n        async function updateDir(dir) {\n            console.log(Colors.colorize([Colors.FgGreen], `Actualizando /${dir}/package.json`));\n            const data = await readJSON(`${basedir}/${dir}/package.json`);\n            if (data.devDependencies == undefined) {\n                data.devDependencies = {\n                    i18n: \"workspace:*\",\n                };\n            }\n            else {\n                data.devDependencies.i18n = \"workspace:*\";\n            }\n            await safeWrite(`${basedir}/${dir}/package.json`, `${JSON.stringify(data, null, 2)}\\n`, true);\n        }\n        if (await isDir(`${basedir}/packages`)) {\n            for (const dir of await readDir(`${basedir}/packages`)) {\n                await updateDir(`packages/${dir}`);\n            }\n        }\n        if (await isDir(`${basedir}/services`)) {\n            for (const dir of await readDir(`${basedir}/services`)) {\n                await updateDir(`services/${dir}`);\n            }\n        }\n        console.log(Colors.colorize([Colors.FgGreen], `Actualizando /package.json`));\n        const paquete = await readJSON(`${basedir}/package.json`);\n        paquete.scripts.i18n = \"yarn workspace i18n\";\n        await safeWrite(`${basedir}/package.json`, `${JSON.stringify(paquete, null, 2)}\\n`, true);\n    }\n}\n"],"names":["soportados","Init","run","basedir","i18n","console","log","colorize","FgGreen","JSON","stringify","extends","config","catch","lang","langs","modulos","async","updateDir","dir","data","undefined","devDependencies","name","description","version","author","scripts","paquete"],"sourceRoot":""}
steps:
    #####
    # DESCARGA DE APLICACIONES NECESARIAS
    #####
  - name: 'gcr.io/cloud-builders/curl'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/descargas.sh"
    id: 'Descargas'
    waitFor:
      - '-'

    #####
    # LABELS
    #####
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/labels.sh"
    id: 'Labels'
    waitFor:
      - 'Descargas'

    #####
    # OBTENER TAGS
    #####
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/tags.sh"
    id: 'Obtener Tags'
    waitFor:
      - 'Descargas'

    #####
    # AUTORIZAR
    #####
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/autorizar.sh"
    id: 'Autorizar'
    waitFor:
      - 'Descargas'
      - 'Labels'

    #####
    # CLONAR REPOSITORIOS
    #####
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/clone.sh"
    secretEnv:
      - GITTOKEN
    id: 'Clonar Repositorios'
    waitFor:
      - 'Descargas'
      - 'Labels'

    #####
    # INIT KUSTOMIZE
    #####
  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/init_kustomize.sh"
    id: 'Iniciar Kustomize'
    waitFor:
      - 'Clonar Repositorios'

    #####
    # DESCARGAR LAS DEPENDENCIAS DESDE CACHE
    #####
  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/cache_get.sh"
    id: 'Descargar Cache Dependencias'
    waitFor:
      - 'Labels'

    #####
    # INSTALAR LAS DEPENDENCIAS DEL PROYECTO
    #####
  - name: 'node:lts-alpine'
    entrypoint: 'yarn'
    args:
      - install
      - --mode=skip-build
    id: 'Instalar Dependencias'
    waitFor:
      - 'Descargar Cache Dependencias'

    #####
    # GENERAR APP DE PRODUCCIÓN Y CALCULAR CÓDIGO DE VERSIÓN Y HASH
    #####
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/compilar.sh"
    id: 'Compilar'
    waitFor:
      - 'Descargas'
      - 'Iniciar Kustomize'
      - 'Instalar Dependencias'
      - 'Obtener Tags'

    #####
    # SUBIR LAS DEPENDENCIAS A CACHE
    #####
  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/cache_set.sh"
    id: 'Subir Cache Dependencias'
    waitFor:
      - 'Compilar'

    #####
    # SUBIR A STORAGE
    #####
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/storage.sh"
    id: 'Subir Storage'
    waitFor:
      - 'Compilar'

    #####
    # GENERAR EL CONTENEDOR, PONER ETIQUETAS Y SUBIR
    #####
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/contenedor.sh"
    id: 'Generar Contenedor'
    waitFor:
      - 'Compilar'

    #####
    # ACTUALIZAR LA VERSIÓN DE LA IMAGEN A DESPLEGAR
    #####
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/kustomizar.sh"
    id: 'Kustomizar'
    waitFor:
      - 'Descargas'
      - 'Labels'
      - 'Generar Contenedor'
    # - 'Iniciar Kustomize'

    #####
    # DESPLEGAR
    #####
  - name: 'gcr.io/cloud-builders/gke-deploy'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/desplegar.sh"
    id: 'Desplegar'
    waitFor:
      - 'Autorizar'
      - 'Kustomizar'
      - 'Subir Storage'

    #####
    # DESAUTORIZAR
    #####
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - "@mr/cli/deployment/std/desautorizar.sh"
    id: 'Desautorizar'
    waitFor:
      - 'Desplegar'

#  - name: bash
#    args:['cat', 'services/${_SERVICIO}/version.txt']
#    id: 'Test Version'
#
#  - name: bash
#    args:['cat', 'services/${_SERVICIO}/hash.txt']
#    id: 'Test MD5'

#####
# COMENTAR ESTO PARA PROBAR EN LOCAL
#####
availableSecrets:
  secretManager:
    - versionName: "projects/${PROJECT_ID}/secrets/alpred-lectura/versions/1"
      env: 'GITTOKEN'
#substitutions:
#  _ENTORNO: 'test'
options:
  automapSubstitutions: true
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
  env:
    - '_AUTORIZAR=${_AUTORIZAR}'
    - '_DESPLEGAR=${_DESPLEGAR}'
    - '_DESPLEGAR_LATEST=${_DESPLEGAR_LATEST}'
    - '_ENTORNO=${_ENTORNO}'
    - '_GENERAR=${_GENERAR}'
    - '_GENERAR_FORZAR=${_GENERAR_FORZAR}'
    - '_MYSQL=${_MYSQL}'
    - 'PROJECT_ID=${PROJECT_ID}'
    - 'TRIGGER_NAME=${TRIGGER_NAME}'
#  substitution_option: 'ALLOW_LOOSE'
  pool:
    name: 'projects/${PROJECT_ID}/locations/europe-west1/workerPools/${_BUILD}'
timeout: 1800s
